Экономика. Право. Инновации. 2022. № 1. С. 41–47                                    Управление в организационных системах
Economics. Law. Innovation. 2022. No. 1. P. 41–47                                      Management in organizational systems


Научная статья
УДК 004.413
doi: 10.17586/2713-1874-2022-1-41-47

        КРОССПЛАТФОРМЕННАЯ РАЗРАБОТКА НА БАЗЕ ВЕБ-ТЕХНОЛОГИЙ
                       ДЛЯ ПОДДЕРЖКИ РЕШЕНИЙ
          В ПРОБЛЕМНО-ОРИЕНТИРОВАННЫХ СИСТЕМАХ УПРАВЛЕНИЯ

Александр Юрьевич Пчелкин1, Наталия Федоровна Гусарова2
1,2
  Университет ИТМО, Санкт-Петербург, Россия
1
 sapchelkin@yandex.ru
2
 nfgusarova@itmo.ru, https://orcid.org/0000-0002-1361-6037
Язык статьи – русский

     Аннотация: На фоне высокой конкуренции и необходимости адаптироваться к постоянно изменяющимся
условиям и потребностям рынка многие компании начинают отдавать предпочтение технологиям, позволяющим
повысить гибкость и скорость разработки, а также снизить количество привлекаемых к этой разработке специа-
листов. В статье рассматриваются веб-технологии и подходы к их применению, позволяющие преобразовывать
веб-приложения в мобильные и настольные, расширяя их функционал и возможности для решения задач
управления в проблемно-ориентированных системах, описаны результаты применения технологий для меди-
цинских приложений.
     Ключевые слова: веб-технологии, коллективная разработка, кроссплатформенная разработка, проблемно-
ориентированные системы, прогрессивные веб-приложения, системы поддержки принятия решений
     Ссылка для цитирования: Пчелкин А.Ю., Гусарова Н.Ф. Кроссплатформенная разработка на базе веб-
технологий для поддержки решений в проблемно-ориентированных системах управления // Экономика. Право.
Инновации. 2022. № 1. С. 41–47. http://dx.doi.org/10.17586/2713-1874-2022-1-41-47.


         CROSS-PLATFORM DEVELOPMENT BASED ON WEB TECHNOLOGIES
      TO SUPPORT SOLUTIONS IN PROBLEM-ORIENTED MANAGEMENT SYSTEMS

Alexander Yu. Pchelkin1, Natalia F. Gusarova2
1,2
  ITMO University, Saint Petersburg, Russia
1
 sapchelkin@yandex.ru
2
 nfgusarova@itmo.ru, https://orcid.org/0000-0002-1361-6037
Article in Russian

      Abstract: Against the background of high competition and the need to adapt to constantly changing conditions
and market needs, many companies are beginning to prefer technologies that allow for increased flexibility and speed of
development, as well as reduce the number of specialists involved in this development. The article discusses web tech-
nologies and approaches to their application, allowing to transform web applications into mobile and desktop, expand-
ing their functionality and capabilities to solve management problems in problem-oriented systems, describes the results
of the use of technologies for media applications.
      Keywords: web technologies, collective development, cross-platform development, problem-oriented systems,
progressive web applications, decision support systems
      For citation: PchelkinA.Yu., Gusarova N.F. Cross-Platform Development Based on Web Technologies to
Support Solutions in Problem-Oriented Management Systems. Ekonomika. Pravo. Innovacii. 2022. No. 1. pp.
41–47. (In Russ.). http://dx.doi.org/10.17586/2713-1874-2022-1-41-47.



    Введение. Функционал современных                         их устройства или операционной системы.
веб-приложений практически не уступает                       Если перед компанией стоит задача при раз-
настольным и мобильным версиям [1]. При                      работке приложения покрыть максимально
этом разработанное веб-приложение, за не-                    широкую аудиторию, то разработка натив-
которыми оговорками, будет запускаться и                     ных версий под каждое устройство займет
работать у пользователей независимо от типа                  огромное количество времени и потребует

Экономика. Право. Инновации № 1 / 2022                                                                                  41
Кроссплатформенная разработка на базе веб-технологий …

привлечения большого числа специалистов       ботке статьи, рассматривались примеры су-
разных направлений. При этом есть риск то-    ществующих приложений. После этого каж-
го, что скорость этой разработки окажется     дая выбранная технология в рамках несколь-
крайне невысокой из-за необходимости по-      ких различных проектов была применена на
стоянной синхронизации разных версий. Ес-     практике.
ли же к этому прибавить еще и высокую              Основная часть. Веб-технологии ак-
конкуренцию в IT-индустрии и скорость раз-    тивно развиваются, открывая новые возмож-
вития технологий, то помимо серьезных фи-     ности для разработчиков. Одни возможности
нансовых потерь подобный подход может         позволяют расширить функционал, другие
привести и к потере конкурентоспособности,    упростить и удешевить разработку. Эти тех-
и актуальности разработки. В тоже время       нологии оказываются востребованными как
существует большое число пользователей,        в стартапах, где крайне важна скорость реа-
которые предпочитают пользоваться именно      лизации идей, так и в крупных компаниях,
нативными версиями приложений. Также          где под тяжестью масштабов разработки, па-
статистика показывает, что хотя с привлече-   раллельное развитие нескольких версий ста-
нием новых пользователей лучше справля-       новится неподъемной задачей.
ются веб-приложения, процент удержания у           Нативные приложения все еще зачастую
нативных версий выше.                         остаются лучшим решением при разработке
     Помимо этого, нативные версии имеют      под какую-то конкретную платформу. Одна-
ряд других преимуществ. Зачастую они мо-      ко при кроссплатформенной разработке, раз-
гут работать без интернета, имеют некото-     ница между приложением на базе вебтехно-
рые возможности, недоступные веб-версиям,     логий и нативным приложением оказывается
работают быстрее, и их можно продвигать в     настолько незначительной [3] на фоне раз-
магазинах приложений устройств.               личий в необходимых трудозатратах, что
    В данной статье рассматриваются веб-      многие компании полностью отказываются
технологии, такие как ServiceWorker, PWA,     от нативных версий.
ReactNative и Electron, позволяющие расши-         При сравнении веб-приложений и на-
рять возможности веб-приложений, а также      тивных, в качестве достоинств последних,
собирать на их основе приложения, которые     приводят следующие факторы:
пользователь сможет установить на свое             – приложение может работать без ин-
устройство [2].                               тернета;
    Цель исследования. Цель работы – ис-           – более высокая производительность;
следовать существующие популярные веб-             – возможность задействовать функции
технологии кроссплатформенной разработ-       устройства, такие как камера, геолокация и
ки, определить границы их возможностей и      адресная книга;
применения.                                        – возможность публикации в магазине
    Методы и материалы исследования.          приложений.
Для исследования были отобраны актуаль-             Однако все это реализуемо и в рамках
ные популярные фреймворки и технологии        веб-технологий.
кроссплатформенной разработки. Ключевым            Первой рассмотренной технологий стал
фактором при отборе было практически пол-     ServiceWorker. ServiceWorker – это скрипт,
ное сохранение основной кодовой базы, вне     который запускается браузером в фоновом
зависимости от платформы. То есть выбран-     режиме, отдельно от страницы. При помощи
ная технология должна была дополнять из-      технологии ServiceWorker можно решать
начальное веб-приложение, расширяя его        разные задачи, но самое важное – это воз-
возможности и функционал без серьезных        можность использовать его в качестве по-
изменений в основном коде.                    средника между веб-приложением и сетью
    Каждая технология рассматривалась с       Интернет (Рисунок 1). Тогда при помощи
точки зрения того, какие возможности она      данного скрипта можно перехватывать все
предоставляет разработчику и насколько        исходящие из приложения запросы и обраба-
трудоемко их внедрение. Для этого изуча-      тывать их.
лась официальная документация, открытые            Страница веб-приложения, которую
репозитории проектов, посвященные разра-      пользователь видит в своем браузере, пред-

42                                               Экономика. Право. Инновации № 1 / 2022
                                                             А.Ю. Пчелкин, Н.Ф. Гусарова

ставляет собой набор статических ресурсов,         Таким образом, все необходимые для за-
включающих в себя каркас приложения, сти-      пуска приложения ресурсы будут уже на-
ли, скрипты, шрифты и т.д. Все эти данные      ходиться на устройстве, что позволит поль-
можно при помощи ServiceWorker кэширо-         зователю открывать веб-приложение, даже
вать в браузере пользователя, после чего,      если подключение к интернету отсутствует.
при их повторном запросе, обращаться не к      Помимо статических ресурсов, при помощи
серверу, а извлекать и возвращать данные из    ServiceWorker можно различными способами
внутреннего хранилища.                         сохранять и другие данные.




                         Рисунок 1 – Схема работы ServiceWorker

    Существует множество стратегий кеши-       ограничиться только операциями на чтение
рования. Среди наиболее популярных можно       данных. Можно организовать фиксацию всех
выделить cacheFirst и networkFirst.            изменений, производимых пользователем
    Первая применяется для кэширования         офлайн, после чего синхронизировать их с
неизменяющихся со временем данных. Т.е.        сервером при восстановлении соединения.
если каждый раз при переходе по ссылке             Таким образом, в рамках веб-приложе-
сервер отдает одни и те же данные, то один     ния можно обеспечить полный доступ к
раз сохранив их в кэш, к серверу можно         функционалу системы пользователю, даже
больше не обращаться.                          если у того отсутствует подключение к ин-
    Если же данные меняются, то можно ис-      тернету.
пользовать вторую стратегию. Тогда данные          Технология ServiceWorker поддержива-
будут запрашиваться с сервера каждый раз,      ется практически любым современным брау-
но в случае, если сервер не отвечает или ин-   зером. По статистике свыше 96% пользова-
тернет отсутствует, будут возвращены ре-       телей используют для выхода в сеть браузе-
зультаты последнего удачного запроса.          ры, имеющие полную поддержку Service
    Помимо этого, можно кэшировать не          Worker.
только данные, к которым пользователь об-          Если к веб-приложению, помимо Servi-
ращался, пока был онлайн. К примеру, неко-     ceWorker, добавить еще несколько техноло-
торые новостные сайты могут подгружать         гий, то приложение можно сделать устанав-
актуальные новости в фоновом режиме, бла-      ливаемым. Такие приложения называются
годаря чему пользователь может получать        прогрессивными (PWA – ProgressiveWe-
новую для него информацию, даже когда бу-      bApplication) [4].
дет вне сети.                                      Помимо возможности работы офлайн и
    Также, несмотря на то, что без интернета   запуска в виде отдельного приложения с
пользователь не сможет взаимодействовать с     иконки рабочего стола, такие приложения
сервером, это не означает, что необходимо      позволяют отправлять пользователю push-

Экономика. Право. Инновации № 1 / 2022                                                43
Кроссплатформенная разработка на базе веб-технологий …

уведомления и имеют более широкий доступ       зательно использовать их в том виде, в ко-
к аппаратному обеспечению устройства.          тором изначально задумывалось их создате-
    Устанавливать такое приложение можно       лями.
как на смартфон, так и на персональный             К примеру, React Native – это кросс-
компьютер. При этом нет необходимости от-      платформенный фреймворк для разработки
правлять пользователя в магазин приложе-       нативных приложений. При разработке ис-
ний устройства. Установку можно совер-         пользуются универсальные компоненты са-
шить прямо со страницы веб-приложения.         мого фреймворка, которые при сборке при-
Для этого не требуются права администра-       ложения под конкурентную платформу за-
тора, и осуществляется вопреки запрету ус-     меняются интерфейсными компонентами
танавливать приложения из неизвестных ис-      выбранной платформы [5]. Т.е. несмотря на
точников. Также, так как приложение уста-      то, что разработка приложения осуществля-
навливается не через магазин устройства, то    ется на языке JavaScript, базируясь на прин-
и нет необходимости отдавать процент с         ципах работы React, конечным результатом
прибыли.                                       является нативное приложение.
    Еще одним достоинством прогрессив-             Если разработка проекта начинается с
ных приложений является легкость их об-        нуля, то React Native будет отличным кросс-
новлений. Несмотря на то, что вся необхо-      платформенным решением. Однако если уже
димая для работы приложения статика кэ-        есть разработанная веб-версия, то для созда-
шируется на устройстве пользователя и          ния нативного приложения потребуется су-
больше не запрашивается с сервера, измене-     щественно переработать имеющийся код,
ния ServiceWorker все еще отслеживаются.       например, переписать существующие эле-
При выпуске обновления, разработчику дос-      менты интерфейса, используя компоненты
таточно внести информацию о новой версии       React Native. В этом случае можно сделать
в файл ServiceWorker, и PWA на устройстве      приложение гибридным, задействовав ком-
пользователя автоматически произведет его      понент WebView из React Native [6].
переустановку при следующем запуске.           WebView – это компонент, который позволя-
    PWA активно продвигаются компанией         ет встраивать веб-страницы в приложения,
Google. Поэтому такие приложения можно         своеобразный минибраузер.
публиковать в их магазине приложений               Идея такой реализации близка к разра-
GooglePlay. Также их можно публиковать в       ботке на ApacheCordova (PhoneGap) [7], где
магазинах Microsoft Store и Samsung Galaxy     написанный на веб-технологиях пользова-
Store. В магазине AppleAppStore публико-       тельский интерфейс отображался через сред-
вать такие приложения не разрешено.            ство просмотра веб-страниц, а функционал
    Из ограничений стоит еще выделить, что     приложения расширялся за счет подключе-
возможность прямой установки тоже дос-         ния специальных плагинов.
тупна не из всех браузеров. Однако по стати-       В React Native существуют механизмы
стике 86% пользователей используют брау-       для вызова функций и обмена сообщениями
зеры, поддерживающие эту функцию.              между основным приложением и контентом,
    PWA, по сути, является просто над-         отображаемым во WebView. Таким образом
стройкой. Благодаря этому даже если какие-     становится доступным взаимодействие с
то из вышеописанных технологий браузером       устройством пользователя, выходящее за
пользователя не поддерживаются, он все         рамки     обычных      возможностей     веб-
равно сможет открыть сайт и работать с ним,    приложения. К примеру, доступ к камере,
как с обычным веб-приложением.                 геолокации или адресной книге.
    На данный момент многие крупные ком-           Разница между гибридным приложением
пании начинают использовать PWA. Среди         и нативным – в скорости работы пользова-
них Google и AliExpress.                       тельского интерфейса. Однако даже на сла-
    Если возможностей PWA оказывается          бом устройстве пользователь не заметит ме-
недостаточно для реализации идеи, то окон-     жду ними разницы, если должным образом
чательно стереть грань между нативным и        проведены работы по оптимизации (не про-
веб-приложением можно, используя React         исходит лишних перерисовок компонентов,
Native или Electron. При этом даже не обя-     результаты выполнения сложных вычисле-

44                                                Экономика. Право. Инновации № 1 / 2022
                                                            А.Ю. Пчелкин, Н.Ф. Гусарова

ний и часто вызываемые элементы интер-            Есть у подобного подхода и недостатки.
фейса мемоизируются, не создаются лишние      Так как приложение базируется на
обработчики событий) [8].                     Chromium, то для работы ему будет требо-
    Также разработчик может в любых про-      ваться немного больше оперативной памяти,
порциях совмещать нативные компоненты и       чем аналогичному нативному приложению.
контент, отображаемый через WebView. К        Так же Chromium включается в итоговую
примеру, сделав элементы навигации и неко-    сборку проекта, поэтому размер установоч-
торые страницы полностью нативными, а         ного файла будет не менее 30Мб.
другие – отображаемыми через средство             Electron активно используется в разра-
просмотра веб-страниц. Вне зависимости от     ботке. К примеру, на нем написаны настоль-
того, является ли приложение нативным или     ные    версии     Skype,   Discord, Slack,
гибридным, для смартфона оно будет полно-     VisualStudioCode и Atom.
ценным мобильным приложением. Такое               Полученные результаты. Рассмотрен-
приложение можно будет свободно публико-      ные выше        технологии были успешно
вать в магазине приложений не только уст-     апробированы при разработке нескольких
ройств под управлением операционной сис-      собственных проектов. Так использование
темы Android, но и iOS.                       технологии Apache Cordova при создании
    Для разработки настольных приложений      мобильного медицинского сервиса для са-
можно использовать Electron. Electron – это   моорганизации пожилых людей во время
фреймворк, разработанный GitHub, в основе     пандемии [9] позволило добавить в прило-
которого лежат Chromium и Node.js, объеди-    жение функционал, задействующий камеру
нённые в единую среду. Т.е. получается, что   и микрофон устройства. При дальнейшем
это некое клиент-серверное приложение, со-    переходе приложения на более актуальную и
бранное вместе. Пользовательский интер-       развивающуюся технологию React Native
фейс отображается через веб-браузер           удалось практически полностью сохранить
Chromium, а сервер на Node.js обрабатывает    исходную кодовую базу.
его запросы. И хотя такая конструкция вы-         Технологии ServiceWorker и PWA были
глядит достаточно странной, она хорошо ра-    применены при разработке краудсорсинго-
ботает и предоставляет разработчику широ-     вой платформы для сбора и разметки ме-
кие возможности. Помимо возможности ис-       дицинских снимков. Это позволило, во-
пользовать в проекте любые JavaScript биб-    первых, реализовать off-line режим работы
лиотеки, к приложению на Electron можно       web-приложения и, во-вторых, сделать его
подключать модули, написанные на других       устанавливаемым на устройство пользовате-
языках, вроде Python или C++. Благодаря       ля (Рисунок 2). Эти возможности были
этому в разрабатываемом приложении мож-       крайне востребованы, так как предпола-
но задействовать уже их библиотеки или пи-    галось использование приложения в ре-
сать оптимизированный код для выполнения      гионах с низким качеством интернет
сложных вычислений.                           связи.




             Рисунок 2 – Краудсорсинговая платформа на разных устройствах


 Экономика. Право. Инновации № 1 / 2022                                              45
Кроссплатформенная разработка на базе веб-технологий …

    Краудсорсинговая платформа реализу-            ния, в то время как искусственный ин-
ет концепцию Human-in-the-Loop, при                теллект становится все более точным и
которой человек интегрирован в обуче-              в какой-то момент уже сам начинает
ние искусственного интеллекта. Специа-             оказывать помощь специалисту в приня-
лист итеративно формирует обучающие                тии решений в изучаемой области (Ри-
данные и контролирует процесс обуче-               сунок 3).




                          Рисунок 3 – Концепция Human-in-the-Loop

    Технология Electron, позволяющая за-           можно обеспечить офлайн доступ к прило-
действовать в приложении модули других             жению. Добавив к ServiceWorker несколько
языков (в том числе и Python), открывает           других технологий, можно сделать веб-
возможности прямой интеграции результа-            приложение устанавливаемым. Если необхо-
тов обучения искусственного интеллекта в           димо сделать полноценное кроссплатфор-
настольную версию системы.                         менное приложение с полным доступом к
    Вывод. Веб-технологии можно исполь-            функциям устройства и возможностью пуб-
зовать не только при разработке сайтов и           ликации в магазине приложений любой опе-
веб-приложений, но и при создании мобиль-          рационной системы, то можно рассмотреть
ных и настольных приложений. Их исполь-            вариант разработки нативного или гибрид-
зование позволяет упростить и удешевить            ного приложения на ReactNative. При разра-
кроссплатформенную разработку, чем ак-             ботке настольных версий в качестве альтер-
тивно пользуются как крупные компании,             нативы можно рассмотреть фреймворк
так и небольшие стартапы.                          Electron, который позволяет еще сильнее
    В зависимости от потребностей можно            расширить функционал приложения, благо-
использовать те или иные описанные выше            даря возможности интеграции в него моду-
технологии. При помощи ServiceWorker               лей, написанных на других языках.

     Список источников                                 References
1. Шинкарев А.А. Ретроспектива развития веб-       1. Shinkarev A.A. A Retrospective of The
технологий в создании корпоративных информа-       Development of Web Technologies In The Creation
ционных систем // Вестник Южно-Уральского          of Corporate Information Systems.VestnikYUzhno-
государственного университета. Серия: Компью-      Ural'skogogosudarstvennogouniversiteta.    Seriya:
терныетехнологии, управление, радиоэлектрони-      Komp'yuternyetekhnologii, upravlenie, radioelek-
ка. 2020. 14 с.                                    tronika. 2020. 14 p. (In Russ.).
2. Scott Adam D. JavaScript Everywhere: Building   2. Scott Adam D. JavaScript Everywhere: Building

46                                                    Экономика. Право. Инновации № 1 / 2022
                                                                                         А.Ю. Пчелкин, Н.Ф. Гусарова

Cross-Platform Applications with GraphQL, React,                   Cross-Platform Applications with GraphQL, React,
React Native, and Electron // O'Reilly Media. 2021.                React Native, and Electron. O'Reilly Media. 2021.
(In Eng.).
3. Barros L.P., Medeiros F., Moraes E.C., Feitosa                  3. Barros L.P., Medeiros F., Moraes E.C., Feitosa A.
A. Jnr. Analyzing the Performance of Apps Devel-                   Jnr. Analyzing the Performance of Apps Developed
oped by using Cross-Platform and Native Technolo-                  by using Cross-Platform and Native Technologies.
gies // Conference: International Conference on                    Conference: International Conference on Software
Software Engineering and Knowledge Engineering.                    Engineering and Knowledge Engineering. 2020.
2020. (In Eng.).
4. Bhatt K. Progressive Web Application-Present                    4. Bhatt K. Progressive Web Application-Present
and Future. 2019 [Электронный ресурс]. – Режим                     and       Future.    2019.        Available     at:
доступа:       https://www.researchgate.net/   pub-                https://www.researchgate.net/publication/337544344
lication/337544344_Progressive_Web_Applica tion-                   _Progressive_Web_Application-Present_and_Future
Present_and_Future (In Eng.).
5. Недяк А.В., Рудзейт О.Ю., Зайнетдинов А.Р.,                     5. Nedyak A.V., Rudzeyt O.U., Zainetdinov A.R.,
Рагулин П.Г. Инструменты мобильной кросс-                          Ragulin P.G. Mobile Cross-platform App Develop-
платформенной разработки приложений // Ин-                         ment Tools. Internet-zhurnal «Othody i resursy».
тернет-журнал «Отходы и ресурсы». 2020. № 4.                       2020. No. 4. (In Russ.).
6. Adinugroho T.Y., Gautama J.B. Review of Mul-                    6. Adinugroho T.Y., Gautama J.B. Review of Multi-
ti-platform Mobile Application Development Using                   platform Mobile Application Development Using
WebView: Learning Management System on Mobile                      WebView: Learning Management System on Mobile
Platform // Procedia Computer Science. 2015. Т. 59.                Platform. Procedia Computer Science. Vol. 59.
С. 291 (In Eng.).                                                  2015. p. 291.
7. Appiah F., Hayfron-Acquah J.B., Panford J.K.,                   7. Appiah F., Hayfron-Acquah J.B., Panford J.K.,
Twum F. A Tool Selection Framework for Cross                       Twum F. A Tool Selection Framework for Cross
Platform Mobile App Development // International                   Platform Mobile App Development. International
Journal of Computer Applications. 2015. Т. 123. №.                 Journal of Computer Applications. 2015. Vol. 123.
2. 14 с. (In Eng.).                                                No. 2. 14 p.
8. Rieger C., Majchrzak T.A. Towards the Defini-                   8. Rieger C., Majchrzak T.A. Towards the Definitive
tive Evaluation Framework for Cross-Platform App                   Evaluation Framework for Cross-Platform App De-
Development Approaches // Journal of Systems and                   velopment Approaches. Journal of Systems and
Software. Т. 153. 2019. 175 с. (In Eng.).                          Software. Vol. 153. 2019. p. 175.
9. Pchelkin A., Gusarova N., Dobrenko N., Vatyan                   9. Pchelkin A., Gusarova N., Dobrenko N., Vatyan
A. Mobile Healthcare Service for Self-organization                 A. Mobile Healthcare Service for Self-organization
in Older Populations During a Pandemic // Commu-                   in Older Populations During a Pandemic. Communi-
nications in Computer and Information Science.                     cations in Computer and Information Science. 2021.
2021. С. 379–390. (In Eng.).                                       pp. 379–390.




Статья поступила в редакцию24.12.2021; одобрена после рецензирования 29.12.2021; принята к публикации 16.01.2022.
The article was submitted 24.12.2021; approved after reviewing 29.12.2021; accepted for publication 16.01.2022.




Экономика. Право. Инновации № 1 / 2022                                                                              47
