Hindawi
Wireless Communications and Mobile Computing
Volume 2019, Article ID 5743892, 12 pages
https://doi.org/10.1155/2019/5743892




Research Article
An Empirical Study of Cross-Platform Mobile
Development in Industry

         Andreas Biørn-Hansen ,1,2 Tor-Morten Grønli                            ,1
         Gheorghita Ghinea ,1,2 and Sahel Alouneh 3
         1
           Mobile Technology Lab, Department of Technology, Kristiania University College, Oslo, Norway
         2
           Department of Computer Science, Brunel University London, Uxbridge, UK
         3
           Faculty of Electrical Engineering and Information Technology, German Jordanian University, Amman, Jordan

         Correspondence should be addressed to Andreas Biørn-Hansen; andreas.biorn-hansen@westerdals.no

         Received 25 May 2018; Revised 29 October 2018; Accepted 22 November 2018; Published 3 January 2019

         Academic Editor: Gerardo Canfora

         Copyright © 2019 Andreas Biørn-Hansen et al. This is an open access article distributed under the Creative Commons Attribution
         License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly
         cited.

         The purpose of this study is to report on the industry’s perspectives and opinions on cross-platform mobile development, with an
         emphasis on the popularity, adoption, and arising issues related to the use of technical development frameworks and tools. We
         designed and conducted an online survey questionnaire, for which 101 participants were recruited from various developer-oriented
         online forums and websites. A total of five questions are reported in this study, of which two employed a Likert scale instrument,
         while three were based on multiple choice. In terms of technical frameworks, we find that PhoneGap, the Ionic Framework,
         and React Native were the most popular in use, both in hobby projects and in professional settings. The participants report an
         awareness of trade-offs when embracing cross-platform technologies and consider penalties in performance and user experience
         to be expected. This is also in line with what is reported in academic research. We find patterns in the reported perceived issues
         which match both older and newer research, thus rendering the findings a point of departure for further endevours.



1. Introduction                                                        on the market. Our motivation is grounded in suggestions
                                                                       from previous research (e.g., [6, 7]), and in an identified
Since the advent of the smartphone era, mobile-specific soft-          lack of quantitative perspectives from the industry in relation
ware applications, or apps for short, have seen a drastic              to mobile app development, with an emphasis on what
increase in popularity [1], a surge correlating to the sheer           we refer to as cross-platform development. Traditionally,
amount of smartphone owners, reaching into the billions as             mobile smartphone apps have been developed using tools
of 2018 [2, 3]. Alongside the wide reach and general adoption          designed for heterogeneous platform-specific development
of the smartphone, more than 5.6 million apps are available            [8, 9]. This type of development is commonly referred to
for download throughout the three major app marketplaces               as the Native development approach [10], pointing to the
[4], specifically Apple’s App Store, Google’s Play Store, and          use of development environments, Software Development
Microsoft’s Store. Additionally, across the app marketplaces,          Kits (SDKs), and programming languages native to the
hundreds of billions of apps are downloaded on annual                  target mobile platform. With multiple major platforms on
basis [1]. With revenues generated through apps estimated              the market, namely, those of Apple’s iOS, Google’s Android,
to stretch into the hundreds of billions USD in the run up             and Microsoft’s Windows 10 Mobile, a consequence of the
to year 2020 [5], the development, availability, and use of            traditional development approach is the arduous efforts that
apps are likely to continue and grow. In our study, we are             must be put forth to develop an idea into software that can be
specifically interested in the actual development of apps as           deployed to all the aforementioned platforms [7], inherently
conducted by practitioners in the industry and the variety of          requiring proficiency in numerous platform-specific tools
possible development approaches and technologies existing              and languages. This typically includes the Xcode environment
2                                                                              Wireless Communications and Mobile Computing

and Swift/Objective-C for iOS development and the Android            questionnaire to gain insight from mobile developers.
Studio environment and Java/Kotlin for Android develop-              Throughout the survey, we gathered quantitative data on
ment [8, 11]. Nevertheless, of the more than 5.6 million apps        framework popularity, framework usage, and common issues
available throughout the app stores, the absolute majority           associated with cross-platform development. Using this data,
were developed using this exact development approach [12].           further work can focus on researching and solving real-
    An alternative path for conducting app development               world problems and thus can be of great value and validity
is through the use of cross-platform mobile development              beyond academics. Future research can also base technical
frameworks, allowing for the reuse of code across multiple           decisions on the findings we present throughout the article.
platforms [12]. This is in stark contrast to the heterogenous        Summarizing, with this paper we aim to bring industry
nature of the Native development approach, in which code-            perspectives to the research community, both through the
sharing has yet to be identified as practical, although novel        presentation of the state of cross-platform development as
approaches for translation of Native code have recently              reported by practitioners, as well as to bring forth empirically
surfaced, including the Native-2-Native tool presented by            backed suggestions for further research.
Chadha et al. [13] and an approach for code conversion pro-
posed by El-Kassas et al. [14]. Due to the historical imprac-        Outline. The remainder of this paper is organized as fol-
ticality of code-sharing between Native platforms, cross-            lows. In Section 2 we discuss existing research previously
platform mobile technologies have enjoyed the interest of            carried out targeting cross-platform app development, with
both academia and industry practitioners [15, 16], as the            an emphasis on user-oriented studies and the overarching
benefits of adopting such technologies are frequently cited          topics that were part of the questionnaire. A presentation of
to decreased time-to-market and knowledge requirements               the research method and survey design is provided through
when compared to Native app development [17]. When dis-              Section 3. Following that, in Section 4 we bring forth our
cussing cross-platform development, it is important to note          findings from the survey then discuss them throughout
that the term does not specifically target a single product, tool,   Section 5 in the context of previous work. A conclusion
framework, or development approach. Instead, cross-platform          together with a discussion on limitations and suggestions for
is an umbrella term covering all of the aforementioned               further work is then provided in Section 6.
concepts. A multitude of technical frameworks, tools, and
overarching conceptual development approaches belong to              2. Previous Work
this term, adding to its complexity. Technical frameworks
including PhoneGap, Cordova, Ionic, Titanium Appcelerator,           Studies on cross-platform mobile development vary in meth-
and MoSync are frequently mentioned in the literature [18,           ods and focus, with a wide range of topics being actively
19]. Each of these frameworks can be categorized into an             researched. Examples of such include performance scrutiny
overarching development approach based on parameters                 of cross-platform frameworks and tools (e.g., [19, 24–26]),
including user interface rendering environment, access to            studies on user experience (e.g., [6, 27]), more descriptive
device functionality, and code compilation technique [10].           and overarching studies cover topics ranging from taxonomy
These approaches are discussed in additional detail through-         (e.g., [10, 28]) and evaluations of development approaches
out the remainder of this paper.                                     (e.g., [12, 29, 30]) to more technical comparisons (e.g., [18,
    While cross-platform development does involve a series           31]) and app store analysis of cross-platform apps (e.g., [22,
of benefits, certain drawbacks are also frequently mentioned         32, 33]). The aforementioned categories have seen arduous
in the literature. In 2012, Facebook found that their cross-         work and results adding to an increasing body of knowledge.
platform based mobile app did not manage to meet certain             Some of the earliest works produced by researchers, includ-
level of their requirements, due to the app’s inherent and           ing Heitkötter et al.’s [7, 12] comparative studies, focus on
unique complexity [20, 21]. This, together with reported             descriptively evaluating cross-platform frameworks on a wide
issues on scalability and unmet user experience expectations,        array of criteria. With these studies, the authors provided
triggered Facebook to abandon their cross-platform app               a foundation for much of the research that has followed
and instead embrace traditional platform-specific Native app         in recent years. The study at hand draws from the findings
development [20, 21]. Their previous cross-platform based            presented in these articles, which assisted in the development
application was developed using a development approach               of the questions included in our survey questionnaire.
referred to as the Hybrid approach, an alternative way of                From the academic literature, we also encounter numer-
developing mobile apps leveraging common web technolo-               ous notable and relatable studies drawing from and extending
gies including HTML, CSS, and JavaScript [7]. Facebook               the seminal work presented by Heitkötter et al., including
abandoning Hybrid development left the approach in a state           those by Mercado et al. [22], Ali and Mesbah [34], and
of suspiciousness of whether it could in fact generate reliable      Malavolta et al. [32, 33]. The key differentiators between these
apps [22, 23]. More than half a decade later, the reputation         studies and our own current paper are that the aforemen-
and application of the Hybrid approach are still much-               tioned studies are (1) all of a technical nature although main-
debated topics throughout both academia and developer                taining a link to our own research interest, and (2) they work
communities, as presented and discussed throughout this              on uncovering perceptions and opinions on apps developed
study.                                                               using cross-platform technologies from the perspective of
    To better understand the industry’s perception of cross-         end-users through app store analyses, while we focus on
platform development, we conducted an online survey                  the gathering and analyses of the perspectives of developers
Wireless Communications and Mobile Computing                                                                                     3

through an online questionnaire. As we will further discuss        thoughts on potential constraints and issues arising when
throughout this article, and which is especially prominent in      adopting such development frameworks.
the results presented in Table 2, the perspectives of the end-          Perhaps the study identified to be closest in nature to
user is in fact a factor of great importance and relevance to      our current article is a recent interview-based empirical
the participants of our survey.                                    study by Ahmad et al. [37]. Rather than adopting an online
     Few studies on cross-platform mobile development are          questionnaire-based quantitative method as we do in the
based on data gathered from survey questionnaires and inter-       paper at hand, Ahmad et al. interviewed 34 practitioners
views. This gap in the knowledge body is what we target with       on questions related to tools, user experience, reusability
our study, with specific emphasis on industry perspectives.        of code, testing, knowledge, change management, security,
A study by Angulo and Ferre [27] is one of few identified
                                                                   and fragmentation. While several of these questions partially
research projects that lean more towards a user experience
                                                                   match with those found in our questionnaire, we emphasize
and questionnaire type study, rather than being predom-
                                                                   the technological tools and frameworks adopted by prac-
inantly software engineering or vehicles for discussion of
                                                                   titioners and provide quantitative data on issues related to
more overarching topics. Yet, the study differs greatly from
                                                                   cross-platform development (e.g., performance and devel-
ours. Their focus is on testing apps developed using different
                                                                   oper communities, neither of which are included in Ahmad
frameworks on the same group of expert mobile device users
                                                                   et al.’s study), in which the focus is less on the technological
to see if cross-platform development produced apps differ
                                                                   tools available, and more on the qualitative analyses and
in respect of user experience. While the contributions from
                                                                   providing a set of challenges that build on and extend the
the study are highly interesting for the field of research and
                                                                   Software Engineering Body of Knowledge. We find that their
practice, the study targets end-users rather than developers.
                                                                   qualitative study and our quantitative study together form a
     A recent study by Francese et al. [35] has a focus similar
                                                                   good foundation for further research, both through illumi-
to ours in that they, through an online questionnaire, inves-
                                                                   nating technological options for ensuring external validity
tigate practitioners’ relation to mobile app development and
                                                                   and through listing of challenges and issues reported by
thoughts on technologies. While the authors do touch upon
                                                                   industry practitioners.
topics related to cross-platform app development, including
querying the participants for which cross-platform frame-               From our assessment of the academic literature, we notice
works they use, their predefined options differ from ours. The     a pattern in encountered themes and topics. The majority
authors present findings of great interest and contributions       of identified research focuses on principles in software
to the body of knowledge. They provide valuable insight for        engineering and design science. The nature of these studies
further research, especially regarding development approach        are predominantly technical and mathematical, in which
preference, and the work experience among the participants         evaluations of performance, user reviews, and comparisons
in terms of Hybrid app development. Our study differs greatly      of cross-platform frameworks are common topics. Studies
from [35]; our focus is on the participants’ perception of         similar in nature to ours target either general mobile devel-
issues related to cross-platform development, additional to        opers or aim to gauge the opinions and perceptions of end-
broadening the question regarding cross-platform develop-          users. The purpose of our study, on the other hand, is to
ment frameworks. Whereas Francese et al. limit the pre-            contribute with quantitative industry perspectives towards a
defined options to PhoneGap, Titanium, Appcelerator, and           better understanding of the issues underlying cross-platform
AppMobi, we extend the list of frameworks to further               mobile development and thus have an empirical foundation
uncover specific patterns and technologies for discussion and      for suggesting further work in our field of research.
further research.
     We also identified a study by Puvvala et al. [36], focusing   3. Research Method and Survey Design
on interviewing and surveying mobile developers. With this
study, the authors are interested in the creation of a model       The online survey questionnaire was launched on February
for choice of mobile platforms, backed by empiricism of            17th 2016, aiming to gather data from industry practitioners
the questionnaires conducted. A set of their questions share       on development framework popularity and usage and on
similarities with those included in our survey questionnaire,      issues related to cross-platform development and the result-
although the overall theme of their study is more towards          ing apps. In this section, we present how the data gathering
parameters such as infrastructure costs, development envi-         was conducted and from where participants were recruited,
ronments, monetizing of apps, device fragmentation, and            a brief introduction to the tools used, and the questions and
the availability of SDKs and code examples. Several of these       survey instruments included, and we outline the results of a
parameters are also included in the previously presented           pilot test conducted prior to the launch of the survey. The raw
Heitkötter et al.’s [7, 12] seminal work. The main similarity     survey data in Excel format is available online on Github, see
is a question on community support, which in the context of        Section “Data Availability” on page 23.
Puvvala et al.’s study refers to the communities surrounding
iOS and Android, whereas in our study, the question on             3.1. Research Questions. Having presented and analyzed rel-
community is related to those surrounding specific tech-           evant literature in the previous section, what we find is
nical development frameworks. We extend their work by              a knowledge gap mostly related to the industry adoption
adjusting the focal point from general mobile development to       of cross-platform frameworks and practitioners’ percep-
cross-platform technologies and include questions regarding        tions of issues arising in the context of cross-platform app
4                                                                          Wireless Communications and Mobile Computing

development. We developed two research questions targeting        deemed this a necessity due to the vast landscape of mobile
these overarching gaps.                                           development, thus rendering it highly possible that the
     The first research question targets the often-so reported    predefined options were not exhaustive enough. The follow-
issues related to cross-platform development (as discussed in     ing questions and predefined options were included in the
numerous studies, e.g., [24–26, 30, 36, 38]). By asking partic-   questionnaire:
ipants to answer questions related to this research question,         Question #1: How familiar are you with the following
we can identify possible similarities between the perceptions     frameworks?
of practitioners and scholarly researchers. Possible matches
                                                                         Associated research question: RQ2
in identified issues could evidently indicate the need for
additional research, hence possibilities for future work. The            Instrument: Likert (1-5)
first research question reads as follows:                                Description of instrument scale: (1) Not at all familiar.
     RQ1: Which issues regarding cross-platform mobile app               (2) Slightly familiar. (3) Moderately familiar. (4) Very
development are commonly reported by the survey partici-                 familiar. (5) Extremely familiar.
pants?                                                                   Predefined options: (i) Ionic Framework, (ii) jQuery
     Our second research question target the adoption and use            Mobile, (iii) NativeScript by Telerik, (iv) PhoneGap,
of technical cross-platform frameworks. With this question,              (v) React Native by Facebook, (vi) Reapp, (vii) Sencha
our aim is twofold. Firstly, to identify discrepancies in the            Touch, (viii) Tabris.js, (ix) Titanium by Appcelerator,
usage of these frameworks in the industry, versus their                  (x) Touchstone.js, (xi) Xamarin Forms, (xii) None,
inclusion in academic research [16, 18]. Major discrepancies             (xiii) Other.
could indicate that a refresh of the technologies included and
scrutinized in research is needed to stay industry relevant.          Question #2: How interested are you in exploring the
This could be a practical implication of our study. Heitkötter   following frameworks?
et al. [12, p. 309] explicitly states that “keeping track with           Associated research question: RQ2
progress in [. . .] frameworks” is an important endeavour for
future research. Secondly, to get an overview of the usage               Instrument: Likert (1-5)
of technical frameworks in the industry. We differentiate                Description of instrument scale: (1) Not at all inter-
between hobby usage and professional usage in an attempt                 ested. (2) Slightly interested. (3) Moderately interested.
to analyze whether the (imminent) future adoption of cross-              (4) Very interested. (5) Extremely interested.
platform frameworks in the industry might differ from the                Predefined options: Same as in question # 1
status quo. The second research question reads as follows:
     RQ2: Which cross-platform frameworks are adopted by             Question #3: Which of the following framework(s) are
the survey participants, and to what degree does professional     you currently using (hobby)?
technology adoption differ from hobby usage?                             Associated research question: RQ2
                                                                         Instrument: Multiple Choice
3.2. Survey Tool. The questionnaire was developed using Sur-
veyPlanet (SurveyPlanet: https://www.surveyplanet.com/), a               Predefined options: Same as in question # 1
survey tool for designing and carrying out online question-          Question #4: Which of the following framework(s) are
naires. Two survey instruments were used, being those of          you currently using (professionally)
scoring and multiple choice. The scoring instrument enabled
the creation and use of a numbered Likert scale. While a                 Associated research question: RQ2
Likert scale may be used with text as the option headings                Instrument: Multiple Choice
and numbers for the Likert items, SurveyPlanet chose to use              Predefined options: Same as in question # 1
numbers as the option headings and radio buttons for the
Likert items. To support the numbered headings, an optional           Question #5: If any, which of the following issues do you
question subtitle field was available to specify the meaning      relate to cross-platform development?
behind the headings.                                                     Associated research question: RQ1
                                                                         Instrument: Multiple Choice
3.3. Questions and Measures. A total of five questions were
included in the survey questionnaire. Two made use of the                Background for predefined options: the list of pre-
scoring instrument, and the remaining four used the multiple-            defined options presented below is compiled from the
choice instrument. To sufficiently adhere to standard practices          relevant literature discussed in Sections 2 and 3.1.
for decisions on such as question wording, scale length and              Predefined options: (i) overall loss in performance
labelling, a document by Taylor-Powell [39] on scaling was               compared to native apps, (ii) Suboptimal User Expe-
identified and used as the foundation for the survey creation.           rience (UX), (iii) immature frameworks (too cutting
The cross-platform development frameworks, as listed below               edge, too much risk, etc.), (iv) suboptimal options for
in question #1, were chosen for inclusion in the survey due to           creating good user interfaces (UI), (v) immature com-
prevalence in either or both industry and academia [16].                 munities (too new/low activity, etc.), (vi) hard to inte-
    An “Other” option was included in the questionnaire,                 grate with device APIs, (vii) hard to test/debug, (viii)
enabling participants to manually input an answer. We                    security issues, (ix) other.
Wireless Communications and Mobile Computing                                                                                            5

                           Table 1: Survey questionnaire results on framework familiarity, interest, and usage.

                                         Familiarity (Q#1)                       Interest (Q#2)                       Usage (Q#3-4)
Framework                                             Averages                               Averages               N               N
                                   Totals                                 Totals
(alphabetic order)                                    (max 5)                                (max 5)              (Hobby)         (Prof.)
Cordova ∗                            -                    -                 -                     -                  2               0
Fuse by Fusetools                   124                 1.23               162                   1.6                 3               1
Intel XDK                           132                 1.31               147                 1.46                  2               0
Ionic Framework                     289                 2.86               281                 2.78                 37              17
jQuery Mobile                       280                 2.77               164                 1.62                 12               9
Meteor ∗                             -                    -                 -                     -                 13              12
NativeScript by Telerik             159                 1.57               199                 1.97                  5               1
PhoneGap                            338                 3.35               306                 3.03                 47              32
React Native by Facebook            302                 2.99               432                 4.28                 46              26
Reapp                               135                 1.34               174                  1.72                 4               2
Sencha Touch                        174                 1.72               138                  1.37                 1               1
Tabris.js                           112                  1.11              145                 1.44                  1               0
Titanium by Appcelerator            173                 1.71               149                 1.48                  3               3
Touchstone.js                       123                 1.22               164                  1.62                 2               1
Xamarin Forms                       166                 1.64               166                 1.64                  6               2
None                                                      -                 -                     -                 14              30



3.4. Pilot Test. To ensure that the survey was of a certain            4. Results
standard, involving understandable questions and appropri-
ate instruments and to minimize the possibility of bias, a pilot       4.1. Survey Response. A description of the survey together
test was conducted prior to the public release. The pilot test         with a link to the online questionnaire was posted to multiple
involved four interaction designers with experience in user            websites, forums, and online groups of relevance to mobile
testing, web design, and mobile development from industry              app development. The groups were closed Facebook and
projects. From the pilot, it was established that answering            LinkedIn groups requiring a membership and approval from
the entire survey took approximately 2 minutes from start              administrators. The websites consisted of newsboards such
to finish. This was deemed an acceptable length by the test            as Reddit, Hacker News, and Crater. Within the first 48
panel, who reassured that the length was crucial for a survey          hours of publicly launching the survey, over 90 responses
with no tangible end-user rewards. Due to SurveyPlanet’s               were recorded by SurveyPlanet. Due to the nature of the
Likert scale-like implementation of scores, the test panel             aforementioned websites, where posts are often ordered by
found it necessary to expand on the original description of            date of submission and thus naturally disappear after some
the numbered option headings. This was introduced in the               time depending on the website’s activity, the amount of new
final version of the questionnaire, as further discussed in            respondents after the initial few days declined drastically.
Section 3.3.                                                           After 11 days, the survey had reached 100 responses. In total
                                                                       101 responses had been recorded by SurveyPlanet after 14
3.5. Recruiting Survey Participants. To ensure the possibility         days, at which point we locked the survey and extracted the
of a high response rate, the questionnaire link was posted to          data. We find that the sample size (𝑁 = 101) is of comparable
multiple websites and online groups targeting mobile devel-            size to similar studies, including those by Francese et al. [35]
opers. Specifically, these websites included Reddit, Hacker            at 82 respondents, Puvvala et al. [36] at 137 respondents, and
News, Crater.io, LinkedIn groups, and Facebook groups. In              Ahmad et al. [37] at 34 respondents.
an attempt to avoid bias in the responses, the survey was
only posted to generic online groups and forums not directly           4.2. Results: Framework Familiarity, Interest, and Usage. The
involved or targeting specific cross-platform frameworks.              findings related to cross-platform development frameworks
However, due to the nature of an online questionnaire, it is           have been condensed and are given in Table 1. The structure of
not possible to avoid that the survey link is shared and spread        the table is as follows. The first column lists the frameworks in
by participants or stakeholders onto unwanted or biased                question. The second and third columns under “Familiarity”
websites or online forums. Nevertheless, we can assume                 are dedicated to question #1 regarding the participants’ famil-
that some snowball sampling occurred. To the best of our               iarity with each framework. The fourth and fifth columns
knowledge, SurveyPlanet did not expose the URL of the                  under “Interest” display the answers given to question #2
website the respondents arrived to the survey from, making it          regarding interest in exploring the frameworks. Columns six
inherently more difficult to filter out possible biased answers.       through seven list the participants’ votes regarding which
6                                                                            Wireless Communications and Mobile Computing

       Table 2: Results from question on common issues.            and discuss them in the context of the previously presented
                                                                   survey results. By following such an approach, we are able to
Choices (ordered by N)                                        N    put forth ideas for further work that are anchored in industry
Overall loss in performance compared to native apps           63   needs.
Suboptimal User Experience (UX)                               58
Immature frameworks (too cutting edge, too much risk, etc.)   55   5.1. Commonly Reported Issues. Associated research ques-
Suboptimal options for creating good User Interfaces (UI)     50   tion: Which issues regarding cross-platform mobile app devel-
                                                                   opment are commonly reported by the survey participants?
Immature communities (too new/low activity, etc.)             35
                                                                        The survey participants perceive performance, user expe-
Hard to integrate with device API                             32   rience and user interface design, risks associated technology
Hard to test/debug                                            31   adoption, difficulty of implementation and debugging, and
Security issues                                               13   security to be issues with cross-platform development. The
“Dealing with platform/OS/manufacturer quirks (especially          latter, security, does, and concerningly so, receive far less
                                                              1
Android)”∗                                                         votes than the remaining options. These findings share sim-
“Least common denominator feature set: your app’s features         ilarities with those presented by Francese et al. [35] in their
are limited to the intersection of iPhone and Android’s       1    questionnaire-based study, wherein 17% of the participants
features”∗                                                         report no security testing, 51% report manual testing, and
                                                                   the remainder either do security testing automatically or
                                                                   semiautomatically. Questioning security in the context of
frameworks they use, in which column six is dedicated to           cross-platform frameworks is a topic covered in numerous
hobby usage while column seven to professional usage.              studies, especially targeting the Android WebView compo-
     The two most common answers from the respondents              nent which the entire Hybrid development approach relies
filling in the manual input option “Other” are marked with an      on. Typically, security studies report great security risks and
asterisk (∗) symbol and are made up of Cordova and Meteor.         sensitive data penetration potential in such apps, e.g., a study
We identify both frameworks to have some popularity among          by Luo et al. [41] stressing what they refer to as eventual large-
the survey respondents, albeit the Meteor framework does           scale attacks on WebView-based apps. Academic efforts to
leverage Cordova as its underlying cross-platform technol-         minimize security risks have also been identified, specifically
ogy, similar to the Ionic Framework and other like-minding         through the implementation of access control measures [42]
hybrid frameworks. Cordova is in fact a derived open-source        and leak-detection tools [43]. We find that security, outside of
version of the PhoneGap framework, which is included in our        WebView vulnerabilities, is more discussed in studies target-
survey questionnaire as a predefined option.                       ing general mobile development, i.e., not constrained to the
                                                                   specificity of cross-platform development research. A review
4.3. Results: Perceived Issues. Table 2 shows the collected        study by Faruki et al. [44] assesses numerous techniques for
responses from the multiple-choice based question “if any,         introducing malware and malicious behaviour in Android
which of the following issues do you relate to cross-              apps, several of which are highly relevant for both Native and
platform development?” The options listed are issues fre-          cross-platform mobile developers, including but not limited
quently encountered and mentioned in the academic body of          to ensuring optimal permissions schemes, and an awareness
knowledge and are topics of manifold research projects (e.g.,      of the possibility of repackage apps. The same techniques and
[19, 25, 26] on performance, [6] on user experience, and [40]      challenges are also stressed by Sufatrio et al. [45] in a review
on programmatic access to device APIs). The discussion fol-        study similar in nature to that of Faruki et al. The state of
lowing in Section 5 focuses especially on the relation between     security in mobile apps, specifically health-related software,
the state of research, represented by studies such as those        is categorized as alarming in a study by Papageorgiou et al.
previously mentioned, versus the opinions and perceptions          [46], emphasizing the highly insecure implementations of
of industry practitioners in regard to the findings presented      sensitive data transfers over HTTP, user profiling, and more.
in Table 2. The outcome of this discussion is of particular        Security is also the topic of He et al.’s [47] study on limiting
interest for future research, which we revisit in Section 6.       attack surfaces through providing guidelines to stakeholders,
    In the collected survey responses, we find two answers         including both end-users and developers, whereby the former
from those respondents answering the manual input option           stakeholder is asked to carefully evaluate the permissions
“Other”. In Table 2, these are wrapped in quotation marks,         asked for by apps upon installation, and the latter, developers,
marked with an asterisk (∗) symbol and inserted at the end         should have a clear understanding of the impact and the
of the table.                                                      attack surfaces introduced with certain app permissions.
                                                                   From the literature, we find that apps asking the end-user
5. Discussion                                                      for sensitive permissions may not describe the purpose or
                                                                   reason for requesting access to the permission-enabled data
The core focus of the discussion that follows is to provide        [48], rendering it difficult to know whether or not this data
a better understanding of the state of research in relation        benefits the app-owner or a third-party more than it benefits
to what industry practitioners deem both interesting and           the user [49]. The usage of in-app advertisement libraries is
problematic with cross-platform mobile development. We             part of a large-scale review study conducted by Martin et al.
draw findings and ideas from the academic literature base          [50], and these libraries are found to request additional app
Wireless Communications and Mobile Computing                                                                                      7

permissions, thus having the potential of acting intrusively       study on device performance during HTTP requests in
and maliciously. Such libraries are commonly found in free         Native and Web-based applications, in which they report on
apps, according to Ruiz et al. [51], and have the potential of     scenarios in which the Web app can outperform Native apps.
negatively impacting app store ratings, as well as the trust       Thus, we note that the industry’s interests do not necessarily
of end-users and customers [49]. In Ahmad et al.’s study on        correlate to what is presented in academic research.
challenges in mobile development [37], in which 34 practi-              For the sake of brevity, we simultaneously discuss two
tioners were interviewed, security was also one of the least-      of the issues reported in Table 2, being those of “Suboptimal
reported challenges. As these findings, concepts, practices,       User Experience (UX)” and “suboptimal options for creating
and guidelines are indeed also applicable to apps developed        good user interfaces (UI)”, as these topics are seemingly
using cross-platform approaches, there is a clear need to stress   interlinked in the literature assessed. These concerns are
the importance of security to practitioners, as our survey         also raised in the academic community surrounding cross-
results clearly indicate. Indeed, with the introduction of the     platform mobile development, and we find an insufficient
General Data Protection Regulation (GDPR), having security         body of knowledge deriving from research. To the best of our
measures in place is important for both business and end-          knowledge, only one longitudinal end user-oriented study
user.                                                              has been conducted to bring forth the opinions of users
     As for the more frequently reported issues, topmost           in terms of the usability of cross-platform apps, being that
we find performance loss in cross-platform apps compared           by Angulo and Ferre [27]. Their experiment involved 37
to apps developed using the Native approach. The various           participants each evaluating a Native and cross-platform app
subtopics within the performance umbrella are frequently           and providing feedback on a variety of mostly nontechnical
discussed in academic literature. Willocx et al. discuss cross-    parameters such as dependability and attractiveness of the
platform app performance in two separate studies [19, 26],         apps. The overarching findings reported by Angulo and Ferre
in which they report expected penalty in performance when          essentially point to the importance of choosing a cross-
opting for a cross-platform development approach. However,         platform framework facilitating the development of apps
they state that the severeness of the performance penalty does     that follow design and interaction guidelines put forth by
not inherently mean that the performance is unacceptable,          the platforms. Nevertheless, they highlight how the Native
in fact, quite the opposite. Based on their empirical perfor-      approach provides a better set of tools for implementing
mance investigation, the authors report generally acceptable       good user interfaces and user experiences. This matches with
performance and especially make note of high-end devices           results from Ahmad et al.’s [37] interview-based study, in
performing well, an important factor also stressed by Noei et      which practitioners deemed user experience an issue more
al. [52] in their study on the impact of device attributes on      critical to Hybrid development than Native development.
user-perceived app quality. Similar findings are also reported     Other findings related to user experience originating from
by Ciman and Gaggi [25] in their empirical investigation of        academia are typically in the context of user interfaces, e.g.,
energy consumption in the context of apps developed using          Dhillon and Mahmoud’s multifocused study in which they
cross-platform frameworks. The key takeaway from their             discuss PhoneGap, Titanium, Adobe Air, and MoSync and
study is the importance of deep framework knowledge and            their capabilities regarding, among other topics, user expe-
through that making a decision which technical framework           rience [38]. Their discussions are drawn from an overview
to build on. Similarly to the findings reported by Willocx et      of framework capabilities within user experience, e.g., avail-
al., also Ciman and Gaggi report an inherent performance           ability of accessibility APIs, inclusion of gesture recognition,
penalty introduced by the adoption of a cross-platform             and access to Native user interface elements. Similarly to
framework. However, of the frameworks listed in Table 1,           the previous studies traversed, Dhillon and Mahmoud also
Ciman and Gaggi only scrutinize PhoneGap and Titanium              stress the importance of framework choice, as they identified
in addition to MoSync, whereas the latter was not included in      major differences between the frameworks scrutinized, such
our survey due to deprecation [53]. Willocx et al. scrutinize      as PhoneGap’s lack of capabilities at the time of writing (2014).
Xamarin and PhoneGap in their 2015 performance study               The context and projected end-user of the apps should also
[26] and proceed to include numerous additional frameworks         be taken into account when deciding on app development
in their 2016 study [19], e.g., the Ionic Framework, Tita-         approach, as Francese et al. report differences in usability
nium, and jQuery Mobile, all of which are listed in Table 1.       requirements between consumer and enterprise apps [35].
In the same table, the framework popularity of the Ionic           This is also mentioned by Lim et al. [56], despite in the
Framework, PhoneGap, and React Native ais considerably             context of differences in mobile app usage between coun-
higher than the rest. Research on the latter framework is          tries, in which they find that price and quality expectations
rarely encountered when traversing the literature, although it     vary between users located in the countries investigated.
has undergone some assessment in recent studies, including         Some studies are also drawn from the experience of having
[40, 54], although performance was not the core focus of           implemented a cross-platform app as part of a larger study,
either studies. Nevertheless, the verdict from both studies is     for example, Smith et al.’s [23] study on self-reporting of
that React Native has its pros and cons compared to other          alcohol consumption, in which they developed a hybrid
frameworks but requires additional scrutiny on a par with          app in which they deemed to have a medium degree of
that conducted by Willocx et al. and Ciman and Gaggi.              user-perceived performance, in spite of providing an overall
From recent studies, we also make note of findings partially       acceptable performance. In more general mobile computing
contradicting previous research, including Ma et al.’s [55]        literature, Huang et al. [57] study the user-perceived latency
8                                                                              Wireless Communications and Mobile Computing

of Android apps and find that the Android operating system           in which sets of frameworks are compared and measured
itself introduces constraints on the user experience, an             on various parameters. Within this category of studies, we
observation that can be critical going forward with further          find for example Heitkötter et al.’s seminal paper describ-
research on the user experience of cross-platform mobile             ing a variety of criteria on which one can evaluate cross-
apps. We find that the survey respondents’ thoughts on user          platform frameworks [7]. Indeed, they list access to platform-
experience and possibilities of good user interfaces in cross-       specific features as an important criterion and describe the
platform apps, as presented in Table 2, correspond with what         capabilities of PhoneGap and Titanium to well facilitate such
is also reported in the literature, whereas the most important       access. However, some studies report limitations imposed
factor is seemingly the choice of framework or overarching           by frameworks, thus making them comparably less capable
development approach in relation to a product specification.         for app development than the Native development approach.
     Our survey questionnaire also questioned the par-               Examples of studies include [23, 58], stating that feature
ticipants’ perception of maturity of cross-platform tools            access is limited, a statement also found in [33], describing the
and their associated communities. Both questions received            (lack of) feature access as a technical shortcoming. However,
numerous votes, respectively, 55 regarding maturity of tools         all three studies may describe the state of the art at the point
and 35 regarding surrounding communities. To the best of             of publishing, which, due to the rapid pace of development
our knowledge, these questions are typically not raised in           in the field, may no longer be representable. In [40], Biørn-
the context of research but are seemingly, and understand-           Hansen and Ghinea investigate through artefact development
ably, of great importance for practitioners. One exception           how features are exposed to the cross-platform development
is Heitkötter et al.’s study on criteria for cross-platform         environments. While they state that they did not identify any
frameworks, in which we do find ”long-term feasibility” listed       functionality that could not be exposed, thus used in cross-
[12]. The rapid pace of development through the continuous           platform apps, the study is limited in comprehensiveness,
advances in the state of the art not only is a challenge for the     and they stress the need of more exhaustive studies verifying
practitioners responding to our survey but also is indeed a          their findings. We deem the necessity of more research as
factor we as researchers must also take into account to ensure       inherent to sufficiently provide concluding proof on feature
validity and relevance. As briefly previously mentioned,             accessibility in cross-platform apps and prove that the 32
the MoSync cross-platform framework is to be found in                participants (ref. Table 1) voting for “hard to integrate with
numerous research articles [16] but has received its last update     device API” are in sync with the state of research.
in 2013, more than half a decade ago. In Table 1, MoSync is not           Lastly to be discussed, the “hard to test/debug” option
included, and none of the respondents answering “Other” and          received 31 votes, only one vote less than the previously dis-
typing their answer manually reported using the framework            cussed issue. Alas, in the literature we rarely encounter men-
either. Thus, even though certain frameworks can frequently          tions of testing and debugging of cross-platform apps. They
be encountered in academic research (e.g., [25, 38]), the            are both listed as subcriteria in Heitkötter et al.’s [7] compara-
relevance of the technologies does not necessarily match what        tive study; however, neither are discussed in the context of the
is used in the industry. We suggest future research to be drawn      frameworks at hand, specifically PhoneGap and Titanium.
from the results presented in Table 1 when deciding on the           The same also goes for Latif et al.’s [29] survey-based study on
sample of technical frameworks and thus complying with               cross-platform development, wherein framework-facilitation
industry interests.                                                  of debugging and that of testing are mentioned as important
     About one-third of the respondents identified issues            factors, but neither are discussed to any degree. Majchrzak
related to the integration and use of platform and device fea-       et al.’s study on innovative cross-platform frameworks [18]
tures, a topic that is also popularly discussed in the research      briefly reports their experience of debugging React Native,
literature. Examples of such features include programmatic           the Ionic Framework, and Fuse, although their findings are
access to, e.g., device camera, contact lists, accelerometer         based on experiences gained through the implementation of
sensor, and GPS, among a wide array [12]. This issue is              numerous artifacts, lacking broader empirical substance.
also frequently examined in the literature, although with
some discrepancies in terms of findings. Whereas numerous            5.2. Technology Adoption. Associated research question:
studies report limited access to underlying platform and             Which cross-platform frameworks are adopted by the survey
device APIs, others report quite the opposite. The impor-            participants, and to what degree does professional technology
tance of such access is often stated in descriptive studies          adoption differ from hobby usage?
focusing on the possibilities and drawbacks of cross-platform            In terms of framework interest, React Native scores the
frameworks. Latif et al., for instance, describe access to           highest average score, 4.28 out of 5. This finding matches
platform and device features as a requirement for frameworks         well with results from other surveys, such as the 2017 State
to facilitate, although they recommend such access to be             of JavaScript online questionnaire [15], wherein React Native
direct without any abstraction layers [29]. To the best of our       is by far the framework most of the survey participants are
knowledge, native-code-generating frameworks, i.e., those            interested in learning more about. To the best of our knowl-
of the Model-Driven Development approach, are among                  edge, React Native is infrequently mentioned in academic
the only ones that can facilitate this requirement; e.g., the        research [16], most likely due to the novelty of the framework.
frameworks listed in Table 1 all rely on some intermediary           Although being reported the “most interesting” framework
abstraction layer to provide feature access. Additional to the       in our survey results, it is not the most used one in terms
study of Latif et al., there are also several comparative studies,   of neither hobby nor professional settings, as displayed in
Wireless Communications and Mobile Computing                                                                                    9

Table 1. In both aforementioned categories, PhoneGap scores        changes to the cross-platform landscape and help researchers
the highest. This is also in line with studies on cross-           in deciding on technologies to include in implementation-
platform framework usage in deployed Android applications          oriented research.
[59]. PhoneGap is also the reported second-most interesting            Another interesting note on technology adoption is the
framework (3.03 of 5), while being the technology most             lack of any Model-Driven Development (MDD) frame-
of the respondents are familiar with (3.35 of 5). The high         works. None of the participants manually enter framework
level of familiarity with PhoneGap reported by respondents         name through the “Other” option mentioned MDD. Similar
may be due to the framework’s history, as it was one of            findings are also reported in other academic works, e.g.,
the first frameworks of its kind in allowing developers to         Majchrzak et al. [18] commenting on the soundness of MDD
wrap web-based code (HTML, CSS, and JavaScript) into a             designs in the context of the seeming lack of industry
native app container, rendering the web code to look and           adoption. This is further investigated by Gorschek et al. [63],
function as if it was written using native technologies [60].      who through their 3785-respondents survey find that the
PhoneGap later became a product of Adobe, while the core of        majority of their participants rarely if ever use models.
PhoneGap, allowing for the wrapping and execution of native        Within mobile development, one reason for the lack of
code through JavaScript interfaces, was given to the Apache        industry adoption could be that the MDD community lacks
Foundation, open-sourced, and renamed Cordova [61]. Both           a standardized domain-specific or modelling language for
PhoneGap and Cordova still exist as distinct products, which       conducting mobile development, according to Umuhoza and
may potentially have confused survey participants unfamiliar       Brambilla [64] in their survey study on model-driven based
with the aforementioned historical anecdote, as Cordova            cross-platform development frameworks. Another reason
is the foundation of numerous projects (e.g., the Ionic            may be that developers adopting MDD-based frameworks are
Framework, Framework7, and OnsenUI), while PhoneGap is             not active in the online communities in which we announced
its own product.                                                   the survey questionnaire thus were not given a chance to
     Our survey results indicate that frameworks often             voice their opinions. From an academic perspective, research
encountered in academic research, e.g., jQuery Mobile, Sen-        on and development of MDD-based frameworks are topics
cha Touch, Titanium, and Xamarin Forms [16], are not the           frequently discussed in the context of cross-platform mobile
same frameworks as those practitioners choose and adopt,           development. Studies conducted by Heitkötter et al. [17, 65]
being those of PhoneGap, the Ionic Framework, and React            on the design and evaluation of the MD2 framework have led
Native. From industry outlets, we find mentions and recom-         to several subsequent studies, e.g., those of Majchrzak et al.
mendations for adopting React Native over Xamarin [62],            [66] discussing MDD in the context of business practicality,
and the State of JavaScript questionnaire [15] lists Xamarin       Usman et al.’s [67] deeply technical study contributing to
in their “Other” category, with the less popular frameworks.       the development of product-lines using MDD, and Rieger
As displayed in Table 1, PhoneGap’s usage is high among the        and Kuchen’s [68] proposal of a graphical approach to MDD
survey participants, while also being frequently encountered       development of mobile apps. Nevertheless, the popularity of
in both academic [16] and industry contexts. Thus, further         Model-Driven Development in academia is not reflected in
research may include a variety of frameworks listed in Table 1,    the survey questionnaire results presented in Section 4.
although decisions on which frameworks to include can now
be made with an empirical grounding in our survey results.         6. Conclusion
     In an attempt to understand where practitioners, hence
the industry, could possibly be moving towards, we dif-            The main objective of the study reported in this paper has
ferentiated between hobby usage and professional usage in          been to report the perspectives and thoughts of industry
our question on framework usage. We find that the Ionic            practitioners on technologies related to and the possibilities
Framework, PhoneGap, and React Native all see significantly        and constraints of cross-platform mobile development tools.
more adoption in the hobby-sphere than in professional             From the existing academic literature, we find that the
settings. Although less significantly, Xamarin, NativeScript,      majority of studies on cross-platform development are of
and jQuery Mobile also enjoy more usage in hobby projects          a technical and mathematical nature, experimenting, com-
than in professional contexts. Especially for the three former     paring, and describing technical development frameworks
frameworks, the results could indicate that practitioners are      and mining and analysing end-user app reviews. For the
moving towards React Native and the Ionic Framework.               study at hand, we conducted an online survey question-
We know from previous research that PhoneGap is already            naire, recruiting participants from various online forums
widely used in the industry and in deployed apps [59].             and communities related to the development of mobile apps.
However, we have identified fewer academic indications of          With 101 respondents, we are able to provide perspectives
React Native and the Ionic Framework following the footsteps       originating from the industry. The majority of the survey
of PhoneGap. Results from follow-up surveys can help to            participants reported issues that are also commonly discussed
validate this indication of rising popularity and adoption. A      in the academic literature. Issues related to performance, user
limitation to our study in regard to this question is evident      experience, and the maturity of technical frameworks are
that practitioners may test the feasibility of certain frame-      those most prominently reported by the survey participants.
works prior to adopting them into professional projects. Thus,     In particular, performance and user experience are topics
the results may be skewed as a result of this. Nevertheless, the   frequently discussed in research, while the matureness of
results from this question may act as an indication of coming      frameworks, or the reported lack thereof, is a topic rarely
10                                                                             Wireless Communications and Mobile Computing

encountered. Discussing our findings in relation to related         perceptions accordingly. Following this trail, we also urge fel-
research, we find that all the aforementioned topics are in         low researchers interested in building on our results to focus
need of additional scrutiny and more conclusive results,            on understanding in-depth perspectives of the commonly
as studies often contradict each other, rendering research-         perceived issues presented in Table 2.
backed decision making difficult. On a more worrisome note,
few participants perceived security in cross-platform apps
to be an issue. As discussed in Section 5, issues related to
                                                                    Data Availability
security indubitably exist and should be accounted for in the       The XLSX-based data used to support the findings pre-
creation of cross-platform apps.                                    sented in this study have been deposited in the Github
    In terms of cross-platform framework usage and pop-             repository located at the following URL: https://github.com/
ularity, survey participants were by far most interested in         mobiletechlab/perspectives-industry-survey.
exploring React Native, PhoneGap, and the Ionic Framework,
in that particular order. When questioned which framework
they use professionally, PhoneGap is the highest ranked,            Disclosure
followed by React Native and the Ionic Framework. The same
                                                                    This research was conducted as part of the employment of the
order is also true for hobby usage, although far more of the
                                                                    authors at Kristiania University College, Brunel University
participants are developing apps as a hobby opposed to doing
                                                                    London, and the German Jordanian University.
it professionally. In the research literature, we find that less-
used frameworks are often included for scrutiny in surveys,
namely, MoSync and Titanium; however, while the former              Conflicts of Interest
is deprecated, the latter is used by a handful of the survey
participants.                                                       The authors declare that there are no conflicts of interest
                                                                    regarding the publication of this paper.
6.1. Limitations and Suggestions for Further Research. We
acknowledge that our study has limitations in terms of the          References
depth of our questionnaire, as well as the sample nature.
While our sample size 𝑁 = 101 cannot be claimed to be               [1] App Annie, “App annie market forecast 2017,” 2017, https://www
representative of the overall population, the sample is of a            .statista.com/statistics/271644/worldwide-free-and-paid-mo-
similar size to related work, as discussed in Section 4.1. We           bile-app-store-downloads/.
also acknowledge that our questionnaire is not an in-depth          [2] eMarketer, “Number of smartphone users worldwide 2014-
surveying of the participants, rather a point of departure              2020,” 2016, https://www.statista.com/statistics/330695/num-
for better understanding the perceptions of practitioners               ber-of-smartphone-users-worldwide/.
working in the industry. More in-depth follow-up studies can        [3] V. J. Reddi, H. Yoon, and A. Knies, “Two Billion Devices and
hopefully be drawn from our results for use in the creation             Counting,” IEEE Micro, vol. 38, no. 1, pp. 6–21, 2018.
survey questionnaires and interviews. One particular sugges-        [4] D. Loesche, “Infographic: The biggest app stores,” 2018, https://
tion for such studies could be the inclusion of metaquestions           www.statista.com/chart/12455/number-of-apps-available-in-
allowing for cross-referencing of job position and skill level          leading-app-stores/.
against framework usage and perceived issues arising with the       [5] App Annie, “Mobile app revenues 2015-2020,” 2016, https://
adoption of cross-platform frameworks.                                  www.statista.com/statistics/269025/worldwide-mobile-app-
    Continuing with suggestions for further research, the               revenue-forecast/.
results put forth and discussed throughout this article may         [6] M. Ciman, O. Gaggi, and N. Gonzo, “Cross-platform mobile
all individually and jointly be significant and extensive               development,” in Proceedings of the the 29th Annual ACM
topics for future work. To ensure external and industry                 Symposium, pp. 757–759, Gyeongju, Republic of Korea, March
                                                                        2014.
validity in upcoming studies on cross-platform development,
researchers may look at Table 1, providing insights as to           [7] H. Heitkötter, S. Hanschke, and T. A. Majchrzak, “Evaluat-
which frameworks are commonly adopted by practitioners                  ing cross-platform development approaches for mobile appli-
                                                                        cations,” in Web Information Systems and Technologies: 8th
and which frameworks may increase in popularity and usage
                                                                        International Conference, WEBIST 2012, Porto, Portugal, April
in the coming years. Concrete topics for further research               18–21, 2012, Revised Selected Papers, vol. 140 of Lecture Notes in
may be drawn from Table 2, in which the survey participants             Business Information Processing, pp. 120–138, Springer, Berlin,
reported that especially performance, UI and UX penalties               Germany, 2013.
are to be expected in cross-platform apps and that the              [8] T.-M. Grønli, J. Hansen, G. Ghinea, and M. Younas, “Mobile
pace of development of new technologies render technical                application platform heterogeneity: android vs windows phone
frameworks immature and less attractive to use in projects.             vs iOS vs Firefox OS,” in Proceedings of the 28th IEEE Inter-
    We suggest that future survey questionnaire-based or                national Conference on Advanced Information Networking and
interview-based researches of similar nature also focus on              Applications (AINA ’14), pp. 635–641, May 2014.
metaperspectives including work responsibilities, job posi-         [9] C. Escoffier and P. Lalanda, “Managing the Heterogeneity and
tion, and self-perceived skills. Such information would allow           Dynamism in Hybrid Mobile Applications,” in Proceedings of
for cross-referencing of technical and personal questionnaire           the 2015 IEEE International Conference on Services Computing
answers, strengthening our understanding of developers’                 (SCC), pp. 74–81, New York City, NY, USA, June 2015.
Wireless Communications and Mobile Computing                                                                                                        11

[10] W. S. El-Kassas, B. A. Abdullah, A. H. Yousef, and A. M. Wahba,         [26] M. Willocx, J. Vossaert, and V. Naessens, “A Quantitative
      “Taxonomy of Cross-Platform Mobile Applications Develop-                     Assessment of Performance in Mobile App Development Tools,”
      ment Approaches,” Ain Shams Engineering Journal, vol. 8, no.                 in Proceedings of the 3rd IEEE International Conference on
      2, pp. 163–190, 2017.                                                        Mobile Services, MS 2015, pp. 454–461, USA, July 2015.
 [11] M. Shafirov, “Kotlin on android. now official,” 2017, https://blog.    [27] E. Angulo and X. Ferre, “A Case Study on Cross-Platform
      .jetbrains.com/kotlin/2017/05/kotlin-on-android-now-official/.               Development Frameworks for Mobile Applications and UX,”
[12] H. Heitkötter, S. Hanschke, and T. A. Majchrzak, “Comparing                  in Proceedings of the the XV International Conference, pp. 1–8,
      cross-platform development approaches for mobile applica-                    Puerto de la Cruz, Tenerife, Spain, September 2014.
      tions,” in Proceedings of the 8th International Conference on Web      [28] C. Rieger and T. A. Majchrzak, “Conquering the mobile device
      Information Systems and Technologies, WEBIST 2012, pp. 299–                  jungle: Towards a taxonomy for app-enabled devices,” in Pro-
      311, Portugal, April 2012.                                                   ceedings of the 13th International Conference on Web Information
[13] S. Chadha, A. Byalik, E. Tilevich, and A. Rozovskaya, “Facilitat-             Systems and Technologies, WEBIST 2017, pp. 332–339, Portugal,
      ing the development of cross-platform software via automated                 April 2017.
      code synthesis from web-based programming resources,” Com-             [29] M. Latif, Y. Lakhrissi, E. H. Nfaoui, and N. Es-Sbai, “Cross
      puter Languages, Systems & Structures, vol. 48, pp. 3–19, 2017.              platform approach for mobile application development: A
[14] W. S. El-Kassas, B. A. Abdullah, A. H. Yousef, and A. M.                      survey,” in Proceedings of the International Conference on Infor-
      Wahba, “Enhanced Code Conversion Approach for the Inte-                      mation Technology for Organizations Development, IT4OD 2016,
      grated Cross-Platform Mobile Development (ICPMD),” IEEE                      Morocco, April 2016.
      Transactions on Software Engineering, vol. 42, no. 11, pp. 1036–       [30] L. Delia, N. Galdamez, P. Thomas, L. Corbalan, and P. Pesado,
      1053, 2016.                                                                  “Multi-platform mobile application development analysis,” in
[15] S. Greif, R. Benitte, and M. Rambeau, “Mobile & desktop                       Proceedings of the 9th IEEE International Conference on Research
      frameworks,” 2017, https://stateofjs.com/2017/mobile/results.                Challenges in Information Science, IEEE RCIS 2015, pp. 181–186,
[16] A. Biørn-Hansen, T.-M. Grønli, and G. Ghinea, “Baseline                       Greece, May 2015.
      requirements for comparative research on Cross-Platform                 [31] J. Perchat, M. Desertot, and S. Lecomte, “Component based
      mobile development: A literature survey,” in Proceedings of the              framework to create mobile cross-platform applications,” in
      30th Norwegian Informatics Conference, 2017.                                 Proceedings of the 4th International Conference on Ambient
[17] H. Heitkötter, T. A. Majchrzak, and H. Kuchen, “Cross-platform               Systems, Networks and Technologies, ANT 2013 and the 3rd
      model-driven development of mobile applications with md2,”                   International Conference on Sustainable Energy Information
      in Proceedings of the 28th Annual ACM Symposium on Applied                   Technology, SEIT 2013, pp. 1004–1011, Canada, June 2013.
      Computing, SAC ’13, pp. 526–533, Coimbra, Portugal, March              [32] I. Malavolta, S. Ruberto, T. Soru, and V. Terragni, “End Users’
      2013.                                                                        Perception of Hybrid Mobile Apps in the Google Play Store,” in
[18] T. Majchrzak, A. Biørn-Hansen, and T. Grønli, “Comprehen-                     Proceedings of the 3rd IEEE International Conference on Mobile
      sive Analysis of Innovative Cross-Platform App Development                   Services, MS 2015, pp. 25–32, USA, July 2015.
      Frameworks,” in Proceedings of the Hawaii International Con-           [33] I. Malavolta, S. Ruberto, T. Soru, and V. Terragni, “Hybrid
      ference on System Sciences, pp. 6162–6171, 2017.                             Mobile Apps in the Google Play Store: An Exploratory Investi-
[19] M. Willocx, J. Vossaert, and V. Naessens, “Comparing perfor-                  gation,” in Proceedings of the 2nd ACM International Conference
      mance parameters of mobile app development strategies,” in                   on Mobile Software Engineering and Systems, MOBILESoft 2015,
      Proceedings of the the International Workshop, pp. 38–47, Austin,            pp. 56–59, Italy, May 2015.
      Texas, May 2016.
                                                                             [34] M. Ali and A. Mesbah, “Mining and characterizing hybrid apps,”
[20] J. Dann, “Under the hood: Rebuilding facebook for iOS,” 2012,                 in Proceedings of the 1st International Workshop on App Market
      https://www.facebook.com/notes/facebook-engineering/under-                   Analytics, WAMA 2016, pp. 50–56, USA.
      the-hood-rebuilding-facebook-for-ios/10151036091753920/.
                                                                             [35] R. Francese, C. Gravino, M. Risi, G. Scanniello, and G. Tortora,
[21] F. Qixing DU, “Under the hood: Rebuilding facebook for
                                                                                   “Mobile App Development and Management: Results from a
      android,” 2012, https://www.facebook.com/notes/facebook-
                                                                                   Qualitative Investigation,” in Proceedings of the 4th IEEE/ACM
      engineering/under-the-hood-rebuilding-facebook-for-android/
                                                                                   International Conference on Mobile Software Engineering and
      10151189598933920/.
                                                                                   Systems, MOBILESoft 2017, pp. 133–143, Argentina, May 2017.
[22] I. T. Mercado, N. Munaiah, and A. Meneely, “The impact of
                                                                             [36] A. Puvvala, A. Dutta, R. Roy, and P. Seetharaman, “Mobile
      cross-platform development approaches for mobile applica-
                                                                                   application developers’ platform choice model,” in Proceedings
      tions from the user’s perspective,” in Proceedings of the the Inter-
                                                                                   of the 49th Annual Hawaii International Conference on System
      national Workshop, pp. 43–49, Seattle, WA, USA, November
                                                                                   Sciences, HICSS 2016, pp. 5721–5730, USA, January 2016.
      2016.
[23] A. Smith, K. de Salas, I. Lewis, and B. Schüz, “Developing smart-      [37] A. Ahmad, K. Li, C. Feng, S. M. Asim, A. Yousif, and S. Ge, “An
      phone apps for behavioural studies: The AlcoRisk app case                    Empirical Study of Investigating Mobile Applications Develop-
      study,” Journal of Biomedical Informatics, vol. 72, pp. 108–119,             ment Challenges,” IEEE Access, pp. 17711–17728, 2018.
      2017.                                                                  [38] S. Dhillon and Q. H. Mahmoud, “An evaluation framework
[24] L. Corral, A. Sillitti, and G. Succi, “Mobile Multiplatform Devel-            for cross-platform mobile application development tools,” Soft-
      opment: An Experiment for Performance Analysis,” Procedia                    ware: Practice and Experience, vol. 45, no. 10, pp. 1331–1357, 2015.
      Computer Science, vol. 10, pp. 736–743, 2012.                          [39] E. Taylor-Powell, “Questionnaire design: Asking questions with
[25] M. Ciman and O. Gaggi, “An empirical analysis of energy                       a purpose,” 1998, https://learningstore.uwex.edu/Assets/pdfs/
      consumption of cross-platform frameworks for mobile devel-                   G3658-02.pdf.
      opment,” Pervasive and Mobile Computing, vol. 39, pp. 214–230,         [40] A. Biørn-Hansen and G. Ghinea, “Bridging the Gap: Investigat-
      2017.                                                                        ing Device-Feature Exposure in Cross-Platform Development,”
12                                                                                       Wireless Communications and Mobile Computing

       in Proceedings of the Hawaii International Conference on System             Apps and Web Apps on Android,” IEEE Transactions on Mobile
       Sciences, pp. 5717–5724, 2017.                                              Computing, vol. 17, no. 5, pp. 990–1003, 2017.
[41]   T. Luo, H. Hao, W. Du, Y. Wang, and H. Yin, “Attacks on              [56]   S. L. Lim, P. J. Bentley, N. Kanakam, F. Ishikawa, and S. Honiden,
       WebView in the Android system,” in Proceedings of the the 27th              “Investigating country differences in mobile app user behavior
       Annual Computer Security Applications Conference, pp. 343–                  and challenges for software engineering,” IEEE Transactions on
       352, Orlando, Fla, USA, December 2011.                                      Software Engineering, vol. 41, no. 1, pp. 40–64, 2015.
[42]   J. Yu and T. Yamauchi, “Access control to prevent attacks            [57]   G. Huang, M. Xu, F. X. Lin et al., “ShuffleDog: Characterizing
       exploiting vulnerabilities of WebView in android OS,” in Pro-               and Adapting User-Perceived Latency of Android Apps,” IEEE
       ceedings of the 15th IEEE International Conference on High                  Transactions on Mobile Computing, vol. 16, no. 10, pp. 2913–
       Performance Computing and Communications, HPCC 2013 and                     2926, 2017.
       11th IEEE/IFIP International Conference on Embedded and Ubiq-        [58]   S. Xanthopoulos and S. Xinogalos, “A comparative analysis
       uitous Computing, EUC 2013, pp. 1628–1633, China, November                  of cross-platform development approaches for mobile applica-
       2013.                                                                       tions,” in Proceedings of the 6th Balkan Conference in Informatics
[43]   D. Sun, C. Guo, D. Zhu, and W. Feng, “Secure HybridApp: A                   (BCI ’13), pp. 213–220, Thessaloniki, Greece, September 2013.
       detection method on the risk of privacy leakage in HTML5             [59]   N. Viennot, E. Garcia, and J. Nieh, “A measurement study of
       hybrid applications based on dynamic taint tracking,” in Pro-               google play,” in Proceedings of the ACM International Conference
       ceedings of the 2nd IEEE International Conference on Computer               on Measurement and Modeling of Computer Systems (SIGMET-
       and Communications, ICCC 2016, pp. 2771–2775, China, Octo-                  RICS ’14), pp. 221–233, ACM, 2014.
       ber 2016.                                                            [60]   L. Davis, “PhoneGap: People’s choice winner at web 2.0 expo
[44]   P. Faruki, A. Bharmal, V. Laxmi et al., “Android security: A                launch pad - ReadWrite,” 2009, https://readwrite.com/2009/04/
       survey of issues, malware penetration, and defenses,” IEEE                  02/phone gap todays peoples choice winner at launch p/.
       Communications Surveys & Tutorials, vol. 17, no. 2, pp. 998–         [61]   B. LeRoux, “PhoneGap, cordova, and what’s in a name?” 2012,
       1022, 2015.                                                                 https://phonegap.com/blog/2012/03/19/phonegap-cordova-
[45]   Sufatrio, D. J. J. Tan, T.-W. Chua, and V. L. L. Thing, “Securing           and-whate28099s-in-a-name/.
       android: a survey, taxonomy, and challenges,” ACM Computing          [62]   “Bekk Consulting, Tools,” 2018, https://radar.bekk.no/tech2018/
       Surveys, vol. 47, no. 4, article 58, 2015.                                  verktoy/xamarin.
[46]   A. Papageorgiou, M. Strigkos, E. Politou, E. Alepis, A. Solanas,     [63]   T. Gorschek, E. Tempero, and L. Angelis, “On the use of software
       and C. Patsakis, “Security and Privacy Analysis of Mobile                   design models in software development practice: An empirical
       Health Applications: The Alarming State of Practice,” IEEE                  investigation,” The Journal of Systems and Software, vol. 95, pp.
       Access, vol. 6, pp. 9390–9403, 2018.                                        176–193, 2014.
[47]   D. He, S. Chan, and M. Guizani, “Mobile application security:        [64]   E. Umuhoza and M. Brambilla, “Model driven development
       Malware threats and defenses,” IEEE Wireless Communications                 approaches for mobile applications: a survey,” in Mobile Web
       Magazine, vol. 22, no. 1, pp. 138–144, 2015.                                and Intelligent Information Systems, vol. 9847 of Lecture Notes
[48]   H. Wang, Y. Li, Y. Guo, Y. Agarwal, and J. I. Hong, “Under-                 in Computer Science, pp. 93–107, Springer International Publish-
       standing the Purpose of Permission Use in Mobile Apps,” ACM                 ing, Cham, Germeny, 2016.
       Transactions on Information and System Security, vol. 35, no. 4,     [65]   H. Heitkötter and T. A. Majchrzak, “Cross-Platform develop-
       pp. 1–40, 2017.                                                             ment of business apps with MD2,” in Design Science at the
[49]   S. Chitkara, N. Gothoskar, S. Harish, J. I. Hong, and Y. Agarwal,           Intersection of Physical and Virtual Design, Lecture Notes in
       “Does this App Really Need My Location?” Proceedings of                     Computer Science, pp. 405–411, Springer, Berlin, Germany,
       the ACM on Interactive, Mobile, Wearable and Ubiquitous                     2013.
       Technologies, vol. 1, no. 3, pp. 1–22, 2017.                         [66]   T. A. Majchrzak, J. Ernsting, and H. Kuchen, “Achieving
[50]   W. Martin, F. Sarro, Y. Jia, Y. Zhang, and M. Harman, “A                    business practicability of model-driven cross-platform apps,”
       survey of app store analysis for software engineering,” IEEE                Open Journal of Information Systems, vol. 2, no. 2, pp. 3–14, 2015.
       Transactions on Software Engineering, vol. 43, no. 9, pp. 817–847,   [67]   M. Usman, M. Z. Iqbal, and M. U. Khan, “A product-line
       2017.                                                                       model-driven engineering approach for generating feature-
[51]   I. J. Mojica Ruiz, M. Nagappan, B. Adams, T. Berger, S. Dienst,             based mobile applications,” The Journal of Systems and Software,
       and A. E. Hassan, “Impact of ad libraries on ratings of android             vol. 123, pp. 1–32, 2017.
       mobile apps,” IEEE Software, vol. 31, no. 6, pp. 86–92, 2014.        [68]   C. Rieger and H. Kuchen, “A process-oriented modeling
[52]   E. Noei, M. D. Syer, Y. Zou, A. E. Hassan, and I. Keivanloo,                approach for graphical development of mobile business apps,”
       “A study of the relation of mobile device attributes with the               Computer Languages, Systems and Structures, vol. 53, pp. 43–58,
       user-perceived quality of Android apps,” Empirical Software                 2018.
       Engineering, vol. 22, no. 6, pp. 3088–3116, 2017.
[53]   MoSync, 2013, https://github.com/MoSync/MoSync.
[54]   A. Biørn-Hansen, T. A. Majchrzak, and T.-M. Grønli, “Progres-
       sive web apps: The possible web-native unifier for mobile devel-
       opment,” in Proceedings of the 13th International Conference on
       Web Information Systems and Technologies, SCITEPRESS, T. A.
       Majchrzak, P. Traverso, K.-H. Krempels, and V. Monfort, Eds.,
       pp. 344–351, 2017.
[55]   Y. Ma, X. Liu, Y. Liu, Y. Liu, and G. Huang, “A Tale of Two
       Fashions: An Empirical Study on the Performance of Native
