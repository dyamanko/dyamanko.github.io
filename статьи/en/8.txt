See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/347595416



Comparison and Evaluation of Cross Platform Mobile Application
Development Tools

Article in International Journal of Applied Mathematics Electronics and Computers · December 2020
DOI: 10.18100/ijamec.832673




CITATIONS                                                                                              READS

3                                                                                                      1,350


2 authors:

            Mehmet Işitan                                                                                         Murat Koklu
            Sakarya University                                                                                    Selcuk University
            1 PUBLICATION 3 CITATIONS                                                                             111 PUBLICATIONS 887 CITATIONS

                SEE PROFILE                                                                                          SEE PROFILE




Some of the authors of this publication are also working on these related projects:



                Occupancy Detection Through Light, Temperature, Humidity and CO2 Sensors Using ANN View project




 All content following this page was uploaded by Murat Koklu on 20 June 2021.

 The user has requested enhancement of the downloaded file.
                             International Journal of Applied Mathematics, Electronics and Computers 8(4): 273-281, 2020


                            INTERNATIONAL JOURNAL OF APPLIED MATHEMATICS                                                          International
                                                                                                                                  Open Access
                                     ELECTRONICS AND COMPUTERS
                                                                                                                                      Volume 08
                                                                                                                                       Issue 04
                                                           www.dergipark.org.tr/ijamec
e-ISSN: 2147-8228                                                                                                                  December, 2020


Research Article

Comparison and Evaluation of Cross Platform Mobile Application Development
Tools
Mehmet ISITAN a                  , Murat KOKLU b
 a  Sakarya University, Faculty of Computer and Information Science, Department of Software Engineering
b   Selcuk University, Faculty of Technology, Department of Computer Engineering


    ARTICLE INFO                          ABSTRACT
     Article history:                     In order to develop a mobile application, it is necessary to develop software separately for each
     Received 28 November 2020            operating system to be outputted. In response to this problem, frameworks that can give application
     Accepted 6 December 2020             outputs for more than one operating system by developing applications on only one platform have
     Keywords:                            been developed. With the recent diversification of these systems, which are called cross platform
     Cross Platform,                      mobile application development tools, which one should be preferred has become a problem for
     Mobile Development,
     Mobile Frameworks,
                                          developers. In this study, the cross-platform mobile application development tools that have come
     One Code                             to the fore in recent years will be determined and evaluated separately based on the pros and cons
                                          of distinguishing parameters. With the help of the applications to be developed, values such as
                                          processor, memory, battery and network usage, rendering time, opening time, installation file size,
                                          application size will be measured. It is also aimed to help developers find out which framework is
                                          more suitable for their needs by comparing them on topics such as popularity, third party software
                                          support, operating systems that can be outputted, development languages and ease of use, speed -
                                          performance. In the study, it was observed that Flutter and React Native gave more successful
                                          results.

                                                                                      This is an open access article under the CC BY-SA 4.0 license.
                                                                                                    (https://creativecommons.org/licenses/by-sa/4.0/)




1. Introduction                                                            cross platform mobile application development tools,
                                                                           software can be developed on only one platform and
   As it is known, there are many mobile operating systems
                                                                           output can be obtained in accordance with the software
used in the market such as Android, IOS, Windows Phone,
                                                                           development languages and templates determined by all
Blackberry, Ubuntu, Symbian, RIM OS, BADA, Palm,
                                                                           these operating systems. While using these tools, it will be
Maemo, Meego, Verdict, KaiOS, Open WebOS [1].
                                                                           sufficient to develop software by only complying with the
Considering the programming processes of the programs
                                                                           software language and format determined by the specified
that will run on these operating systems, it is observed that
                                                                           tool. In this way, with the code written using the
the software languages and platforms of all three are
                                                                           environment provided by the selected platform,
completely independent from each other. Therefore, each
                                                                           application output can be obtained to the platforms needed
application should be developed in accordance with the
                                                                           faster, easier and with less cost. The previous studies on
language and template determined by the operating system
                                                                           this subject are given below.
it will run on. This necessity forces mobile application
                                                                              In the study conducted by Allen et al (2010);
developers to have a very difficult, time consuming and
                                                                           Frameworks such as PhoneGap and Rhomobile were
costly process.
                                                                           compared and the processes of creation and publishing in
   With the effect of developing technology in recent
                                                                           app stores were mentioned [2].
years, a solution has been developed that will provide
                                                                              Palmieri et al. (2012) has discussed a comparison
revolutionary convenience in developing applications for
                                                                           between four frameworks: Rhodes, PhoneGap,
mobile devices. Thanks to these tools, which are called


     * Corresponding author. E-mail address: mehmetisitann@gmail.com
     DOI: 10.18100/ijamec.832673
               Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

DragonRad, MoSync. Comparison was made according to                     investigate the basic requirements of cross platform
application interfaces, programming languages, supported                mobile application development tools. It is concluded that
mobile operating systems, market share, licenses and                    the MDA (Model Driven Architecture) approach is
integrated development environments [3].                                superior [13].
   Heitkötter et al. (2013), in their studies; they evaluated              In the study conducted by Öberg (2016), Xamarin and
web applications, applications developed with PhoneGap                  Cordova tools were evaluated on an application called
or Titanium Mobile and native applications. With this                   Teknisk Förvaltning. CPU and RAM usage, development
evaluation, it is concluded that PhoneGap product is more               speed, application launch speed and the views of tools such
suitable for applications using native interfaces [4].                  as DatePicker and AlertDialog were compared [14].
   Dalmasso et al. (2013) conducted a survey for                           Cristiane et al. (2018) conducted a study involving
PhoneGap, Titanium, and Sencha Touch. Comparisons                       comparison between PhoneGap, Sencha Touch and
have been made in terms of CPU, memory usage and                        Titanium frameworks and native applications. With the
power consumption. Test applications have been                          research, they aimed to measure their current maturity
developed on the Android operating system using these                   status. Memory usage and performances were measured
tools. It has been determined that PhoneGap consumes less               with an application that takes photographs and accesses
memory, CPU and power since it does not contain special                 multimedia sources. It is concluded that native
interface components [5].                                               applications perform better in all respects and the Titanium
   Amatya et al. (2013) with their study; They argued that              framework is slower than others [15].
although cross platform frameworks are not fully mature,                   In the study of Shah et al. (2019), native applications
they show great potential. As a result of the study, it is              and applications written with cross platform frameworks
concluded that the web-based approach offers the best for               were compared theoretically. As a result, it has been
cross-platform mobile application development [6].                      concluded that while the desired kind of applications can
   In the study by Gültürk Karlı (2014), a new software                 be developed with native applications, it is concluded that
framework developed to help developers using cross                      large-scale applications such as the Asphalt game cannot
platform mobile application tools is proposed. The                      be developed with cross platform frameworks. [16].
proposed software framework has provided various                           Application developers spend a lot of time to determine
features to increase the efficiency and quality of the                  which mobile application development tool is the most
resulting application. The developed software framework                 suitable for them. Because after the developers choose one
has been experimentally applied on data mining                          of these tools, they first enter the learning and
applications [7].                                                       professionalization process, and then the application
   Charkaoui et al. (2014) stated that the choice of cross-             development process.
platform mobile application development framework                          In this study, the pros and cons of each of them,
depends on the following two factors in their study; what               including the recently released cross-platform mobile
kind of mobile application is needed and the requirements               application development tools, have been evaluated
of the targeted platforms. It is concluded that the existing            separately on the basis of distinctive parameters. An
tools are insufficient for high capacity applications [8].              application was developed and measured on the empty
   Dhillon et al (2014); they compared PhoneGap,                        foundation of each platform. It is also aimed to help
Appcelerator Titanium, Adobe Air and MoSync tools. As                   developers find out which mobile application development
a result of the study, they stated that Adobe Air and                   tool is more suitable for their needs by comparing the
Appcelerator Titanium gave the best results and PhoneGap                processor, memory, battery and network usage, the
gave the worst results [9].                                             platforms it supports, popularity, third party software
   Tunali et al. (2015) compared the PhoneGap, Xamarin,                 support, rendering and opening time, speed-performance.
Appcelerator Titanium, and Smartface App Studio tools on
a theoretical table [10].                                               2. Material and Method
   In the study conducted by Boushehrinejadmoradi et al.                   There are many frameworks for developing cross
(2015); a testing tool called X-Checker has been                        platform mobile applications. Some of them are React
developed. Xamarin, a popular framework that enables                    Native, Flutter, Xamarin, Nativescript, Ionic Framework,
Windows Phone applications to be cross compiled on                      Unity 3D, Cocos 2D, Titanium, Phonegap, Sencha Touch,
native Android and iOS applications, has been tested [11].              Appcelerator Titanium, Apache Cordova, Rhodes, Onsen
   Jiang (2016); It has evaluated Xamarin and Cordova                   UI, Framework 7, Kony, Jasonette, iFactr, FeedHenry, Qt
tools by scoring them with parameters such as ease of use,              Corona [17]. The use of many of them has decreased
setup, productivity, memory and power consumption,                      considerably in recent years and a few of them have started
security, project size and achieved total scores close to               to be preferred. In this study, first of all, frameworks that
each other [12].                                                        are trending in the last period will be determined and then
   Latif et al (2016); worked on a questionnaire to

                                                                  - 274 -
              Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

performance tests will be made between the applications                    80000
to be developed. In order to determine the most preferred                  70000
                                                                           60000
ones, the 3 systems from which the developers get the most                 50000
                                                                           40000
help will be used. These; GitHub is Stackoverflow and                      30000
Google Trends.                                                             20000
                                                                           10000
   StackOverflow (SO) is the most popular community for                        0
getting answers to software development questions and is
a rapidly growing knowledge base on topics ranging from
algorithms to languages and tools [18]. The graph showing
the cross platform mobile application development tools
that have been the most sought after in SO in recent years
is given in Figure 1.                                                      Figure 3. Number of records opened on Stackoverflow about
                                                                                         frameworks specified so far

                                                                          Google Trends (GT) gives the number of searches done
                                                                       on Google. When the same research is done on GT, the
                                                                       graphic in Figure 4 is obtained. According to this graph, it
                                                                       can be easily seen that the development tools that software
                                                                       developers use the most and seek support the most in
                                                                       recent years are React Native and Flutter.




    Figure 1. Trending frameworks of recent years on the
                  Stackoverflow site [19]
                                                                           Figure 4. Comparison of the last 5 years according to Google
   According to the data announced by SO, Flutter is the                                             Trends
3rd and React Native is the 8th in the list of the most                   GitHub is the most popular web-based collaboration
popular frameworks by developers. The complete list is                 platform for software developers. It is the world's largest
given in Figure 2. According to these data, the number of              open source software platform with over 28 million users
records opened on the SO about the trending frameworks                 [21]. The number of 3rd party applications shared on
of recent years is given in Figure 3.                                  GitHub and calculated based on the keyword are given in
                                                                       Table 1 [22].


                                                                       Table 1. Number of projects on GitHub [22]

                                                                           Platform name          Number of projects on GitHub
                                                                               React Native                         21,832
                                                                                 Flutter                            15,140
                                                                               Nativescript                           687
                                                                                Xamarin                              3,129


                                                                          On GitHub, users star the applications they like and
                                                                       inform other users that they are useful. Accordingly, the
                                                                       number of stars is also of great importance. The star
                                                                       numbers of these platforms shared with open source are
                                                                       given in Table 2 below.




     Figure 2. List of most popular frameworks based on
                Stackoverflow 2019 data [20]




                                                                 - 275 -
                Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

Table 2. Star numbers on GitHub [22]

 Platform name                        Number of stars on GitHub
 React Native                                      90.7k
 Flutter                                           105k
 Nativescript                                      19.1k
                Xamarin.Forms                       4.9k
 Xamarin        Xamarin-macios                      1.9k
                Xamarin-android                     1.5k


   In line with all these data, it was decided to compare
React Native, Flutter, Xamarin and Nativescript, which are
among the most preferred cross platform mobile
application development tools in recent years. Comparison
process; The same application will be written on each
mobile application development platform and the loading
performance of these applications will be measured on the
same device. These apps contain a customized list of 1000
                                                                               Figure 6. React Native application's gradle.build file
elements in total with styles. The written applications will
be tested on the emulator of the Google Pixel 3 device with
Android 10 operating system. Results will be obtained
while viewing all of the objects in this application on the
screen.
   In Figure 5, the basic function of the applications written
is given in the React Native platform. Then, screenshots of
the build.gradle files of these applications are given. The
basic implementation of the Xamarin framework does not
contain a build.gradle file. However, if desired, the basic
settings here can be changed later. Therefore, the gradle
settings in the basic application of all the specified
versions are the same.




                                                                                   Figure 7. Flutter application's gradle.build file




     Figure 5. Application codes written with React Native




                                                                               Figure 8. Gradle.build file of Nativescript application

                                                                   - 276 -
                  Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

3. Experimental Results                                                        the elements in the list are created on the screen by default
   In this section, the applications written are run in debug                  as 20. As such, it takes 3 minutes and 26 seconds in total
mode separately on each platform and measurements are                          to open the application and load the entire list. When the
made based on parameters such as application size,                             settings were made that allow the entire list to be loaded at
creation time, use of device resources.                                        the same time, this time was measured as 51 seconds.
                                                                               When the last list item is displayed, the list still continues
3.1. Application Size                                                          to show the empty list downstream and after 3 seconds the
  The applications developed in this section were made                         empty items at the bottom of the list are automatically
operational and their sizes were examined.                                     discarded and restricted to show the correct list. No such
3.1.1. The size of the application resource on disk                            problem has been encountered with others.
   In this section, the size of the source files of the                        3.3. Use of Device Resources
application created in debug mode to a specified file path                        In this section, device resource consumption was
is examined, excluding the resources of each mobile                            measured while running mobile applications written
application development tool. After the applications are                       separately for each platform on the device and displaying
installed and run, the total dimensions of the application                     all objects on the screen. Profiler feature of Android Studio
resources on the computer are given in Table 3.                                application was used in the measurement process.
Table 3. The size of the source files on the disk in the                       3.3.1. CPU usage
measurement platforms
                                                                                  After the applications written with each of the cross
 Platform                                                                      platform mobile application development tools were run
                     Source Files on Disk (MB)        Version
 Name                                                                          sequentially, a thread containing the name of the current
   React Native                   467                         0.63.3           application was created in the list of threads running on the
     Flutter                      401                         1.22.1           device. Measurements have been made based solely on the
   Nativescript                   434                         7.0.10
    Xamarin                       133                      16.7.000.456        amount of CPU used by the current application thread.
                                                                               Measurements were made until all the objects in the lists
3.1.2. The size of the application's installation file                         in each application were loaded so that they could be
   In this section, the dimensions of the setup files (.apk)                   displayed on the screen.
created in release mode of the most basic applications for                        First, the application written with React Native was run
each platform are examined. Table 4 shows the dimensions                       and a thread called test (com.test) was created in the thread
of the installation files of these applications for the                        list. This thread required a maximum of 79% of the
Android operating system.                                                      processor's resources for 51 seconds as shown in Figure 9.
                                                                               The vertical axis in the graphs indicates the rate of the
Table 4. The size of the installation files of the applications                CPU's resource used in percent, and the horizontal axis
written
                                                                               indicates the time in seconds.
 Platform Name             Size of Setup Files (MB)                               When the application written with Flutter was run, a
      React Native                             23.4                            thread called flutter_app (ple.flutter_app) was created in
        Flutter                                15.2                            the thread list. This thread has used the processor for 28
      Nativescript                             23.5                            seconds as shown in Figure 10 and needed a maximum of
       Xamarin                                 11.1
                                                                               75% resources.
                                                                                  When the application written with Nativescript was run,
3.2. Render Time                                                               a            thread           called           nativescriptIlk
   After this section (including this section), measurements                   (org.nativescript.nativescriptIlk) was created in the thread
continued through the application mentioned in section 2                       list. This thread used the processor for 14 seconds as in
for comparison operations. The time from running the                           Figure 11 and needed a maximum of 70% resources. The
mentioned applications in debug mode to seeing the last                        graphic of Xamarin with the same process is given in
element in the list is given in Table 5.                                       Figure 12. This process took 36 seconds and required a
Table 5. Application render times                                              maximum of 62% of resources.

         Platform Name                            Time(s)
            React Native                              51
              Flutter                                 28
            Nativescript                              14
             Xamarin                                  36


  When the application written with React Native is run,

                                                                          - 277 -
              Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020




                              Figure 9. CPU rates used by the application written with React Native




                                 Figure 10. CPU rates used by the application written with Flutter




                              Figure 11. CPU rates used by the application written with Nativescript




                                Figure 12. CPU rates used by the application written with Xamarin


3.3.2. Memory usage
   In order to measure the memory usage, applications
written for each platform were run one by one and the
memory usage amount during the loading of all 1000
objects was measured.
   In the application written with React Native, when this
process was performed, the graphic in Figure 13 appeared
and the application required a maximum resource of 33.2
MB. The green part in the graph shows the amount used                      Figure 13. Memory rates used by the application written with
by the application. The vertical axis indicates the amount                                       React Native
of memory used, and the horizontal axis indicates the time                When the same operation was performed in the
in seconds.                                                            application written with Flutter, the graphic in Figure 14
                                                                       appeared and the application required a maximum
                                                                       resource of 23.4 MB. The graph of Nativescript is given in
                                                                       Figure 15 and it needs a maximum of 26.8 MB of resources,
                                                                       and finally the graph of Xamarin is given in Figure 16 and
                                                                       it needs a maximum of 18.3 MB of resources.




                                                                 - 278 -
               Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020




 Figure 14. Memory rates used by the application written with
                          Flutter                                             Figure 18. The amount of energy used by the application
                                                                                               written with Flutter




                                                                              Figure 19. The amount of energy used by the application
 Figure 15. Memory rates used by the application written with                                written with Nativescript
                       Nativescript




                                                                              Figure 20. The amount of energy used by the application
 Figure 16. Memory rates used by the application written with                                 written with Xamarin
                         Xamarin                                        3.3.4. Network usage
3.3.3. Energy consumption                                                  In this section, network usage was checked until the
   In order to measure energy consumption, or in other                  whole list was loaded. No network request is included in
words, battery usage, the status of applications during                 any of the applications. In this case, the application code is
loading all objects was examined.                                       expected not to make any network exchanges.
   Battery usage data during the loading of the content of                 In the application written with React Native, network
the application written with React Native is given in Figure            requests are made intermittently. The related graphic is
17. The vertical axis in this graph indicates the usage rate            given in Figure 21. In this graph, the vertical axis indicates
of the battery and the horizontal axis indicates the time in            the amount of network usage per second, and the
seconds. The graphic of Flutter is given in Figure 18,                  horizontal axis indicates the time in seconds.
Nativescript graphic is given in Figure 19 and finally the
graphic of Xamarin is given in Figure 20.




                                                                            Figure 21. Network rates used by the application written with
                                                                                                   React Native
   Figure 17. The amount of energy used by the application
                  written with React Native                               Applications written with other mobile application
                                                                        development tools did not perform any network


                                                                  - 279 -
                  Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

communication.

4. Results and Recommendations
Table 6. Some features of popular cross platform mobile app development tools

                     React Native         Flutter                   Xamarin                       Ionic Framework            NativeScript

  Open Source              Yes              Yes                     Yes, paid                          Yes, paid                Yes, paid
      Company           Facebook          Google                    Microsoft                          Drifty.co                 Telerik
                         React.js,                     C# (Objective-C, Java and C++ based            Javascript,          Javascript, Angular,
  Technologies                             Dart
                        Javascript                                  libraries)                        TypeScript               TypeScript
       Target                              iOS,
                      iOS, Android                           iOS, Android, Windows                   iOS, Android             iOS, Android
      platforms                           Android

  Release date            2015             2017                        2012                              2013                      2015



    Looking at SO and GT data, it is seen that one of the                            2%2C%22sort%22%3A%7B%22share%22%3A-
                                                                                     1%7D%2C%22id%22%3A%22platformsDesktop%22%2C%
most preferred frameworks is Unity3D. Unity3D, unlike                                22dateInterval%22%3A%22Monthly%22%2C%22dateStart%
other prominent development tools, is suitable for                                   22%3A%222019-
developing applications that contain more games or                                   11%22%2C%22dateEnd%22%3A%222020-
                                                                                     10%22%2C%22segments%22%3A%22-1000%22%7D
graphics. A developer who wants to develop such a cross-                      [2]    S. Allen, V. Graupera, and L. Lundrigan, Pro smartphone
platform mobile application is recommended to choose the                             cross-platform development: iPhone, blackberry, windows
Unity3D framework. The theoretical comparison of                                     mobile and android development and distribution. Apress,
                                                                                     2010.
frameworks other than this framework is given in Table 6.                     [3]    M. Palmieri, I. Singh, and A. Cicchetti, "Comparison of cross-
    The two most important criteria for choosing the cross                           platform mobile development tools," in 2012 16th
platform mobile application development tool are the                                 International Conference on Intelligence in Next Generation
                                                                                     Networks, 2012, pp. 179-186: IEEE.
application developed has a performance and error-free                        [4]    H. Heitkötter, S. Hanschke, and T. A. Majchrzak, "Evaluating
operation and there is sufficient developer support behind                           cross-platform development approaches for mobile
it. In this context, considering SO, GitHub and GT data,                             applications," in International Conference on Web Information
                                                                                     Systems and Technologies, 2012, pp. 120-138: Springer.
React Native and Flutter have the biggest popularity and                      [5]    I. Dalmasso, S. K. Datta, C. Bonnet, and N. Nikaein, "Survey,
developer support in recent years. According to this                                 Comparison and Evaluation of Cross Platform Mobile
                                                                                     Application Development Tools," (in English), 2013 9th
criterion, Flutter has surpassed React Native in the last few
                                                                                     International Wireless Communications and Mobile
years. In terms of performance, it is seen that Flutter is                           Computing Conference (Iwcmc), pp. 323-328, 2013.
ahead of React Native.                                                        [6]    S. Amatya and A. Kurti, "Cross-platform mobile development:
                                                                                     challenges and opportunities," in International Conference on
    If these tools are used to develop only one application,                         ICT Innovations, 2013, pp. 219-229: Springer.
one of the important criteria to look at is 3rd party software                [7]    G. KARLI, "Cross-platform mobile development," Dokuz
support. The application to be developed should be divided                           Eylül Üniversitesi, 2014.
                                                                              [8]    S. Charkaoui and Z. Adraoui, "Cross-platform mobile
into modules and it should be checked whether these                                  development approaches," in 2014 Third IEEE International
modules were developed for the vehicle to be selected                                Colloquium in Information Science and Technology (CIST),
before. If you already have web technologies development                             2014, pp. 188-191: IEEE.
                                                                              [9]    S. Dhillon and Q. H. Mahmoud, "An evaluation framework for
experience, you should check out the development                                     cross ‐ platform mobile application development tools,"
languages to learn fast. In this sense, React Native is one                          Software: Practice and Experience, vol. 45, no. 10, pp. 1331-
step ahead as it can be developed with Javascript. For                               1357, 2015.
                                                                              [10]   V. Tunali, S. J. C. B. U. F. o. T. D. o. S. E. Zafer, Maltepe
Flutter, Dart, its own development language, must be                                 University: Faculty of Engineering, and N. S. D. o. S.
learned.                                                                             Engineering, "Comparison of popular cross-platform mobile
    As a result of all these evaluations, it is recommended                          application development tools," 2015.
                                                                              [11]   N. Boushehrinejadmoradi, V. Ganapathy, S. Nagarakatte, and
to choose any of the React Native and Flutter tools, but the                         L. Iftode, "Testing Cross-Platform Mobile App Development
final decision belongs to the developer.                                             Frameworks (T)," in 2015 30th IEEE/ACM International
                                                                                     Conference on Automated Software Engineering (ASE), 2015,
                                                                                     pp. 441-451.
References                                                                    [12]   S. Jiang, "Comparison of native, cross-platform and hyper
[1]    NetMarketshare. (2020, 03.12.2020). Market Share Statistics                   mobile development tools approaches for iOS and Android
       for         Internet        Technologies.        Available:                   mobile applications," Department of Computer Science and
       https://netmarketshare.com/operating-system-market-                           Engineering. University of Gothenburg, pp. 1-15, 2016.
       share.aspx?options=%7B%22filter%22%3A%7B%22%24and                      [13]   M. Latif, Y. Lakhrissi, E. H. Nfaoui, and N. Es-Sbai, "Cross
       %22%3A%5B%7B%22deviceType%22%3A%7B%22%24in                                    platform approach for mobile application development: A
       %22%3A%5B%22Mobile%22%5D%7D%7D%5D%7D%2C                                       survey," in 2016 International Conference on Information
       %22dateLabel%22%3A%22Trend%22%2C%22attributes%2                               Technology for Organizations Development (IT4OD), 2016, pp.
       2%3A%22share%22%2C%22group%22%3A%22platform%2                                 1-5: IEEE.


                                                                     - 280 -
                         Işıtan and Köklü, International Journal of Applied Mathematics Electronics and Computers 08(04): 273-281, 2020

    [14] L. Öberg, "Evaluation of Cross-Platform Mobile Development
              ToolsDevelopment of an Evaluation Framework," ed, 2016.
    [15] C. M. S. Ferreira et al., "An Evaluation of Cross-Platform
              Frameworks        for   Multimedia     Mobile    Applications
              Development," IEEE Latin America Transactions, vol. 16, no.
              4, pp. 1206-1212, 2018.
    [16]      K. Shah, H. Sinha, and P. Mishra, "Analysis of Cross-Platform
              Mobile App Development Tools," in 2019 IEEE 5th
              International Conference for Convergence in Technology
              (I2CT), 2019, pp. 1-7.
    [17]      Statista. (2020, 03.12.2020). Cross-platform mobile
              frameworks used by software developers worldwide in 2019
              and                       2020.                    Available:
              https://www.statista.com/statistics/869224/worldwide-
              software-developer-working-hours/
    [18]      A. Bosu, C. S. Corley, D. Heaton, D. Chatterji, J. C. Carver,
              and N. A. Kraft, "Building reputation in StackOverflow: An
              empirical investigation," in 2013 10th Working Conference on
              Mining Software Repositories (MSR), 2013, pp. 89-92.
    [19]      Stackoverflow. (2020, 03.03.2020). Stackoverflow Trends.
              Available:
              https://insights.stackoverflow.com/trends?tags=react-
              native%2Cflutter%2Cxamarin%2Cnativescript%2Cionic-
              framework%2Cunity3d%2Ccocos2d-
              x%2Ctitanium%2Cphonegap-build%2Csencha-
              touch%2Cappcelerator%2Ccordova%2Ccoronasdk%2Cqt-
              creator
    [20]      Stackoverflow. (2020, 03.03.2020). Most Loved, Dreaded, and
              Wanted Other Frameworks, Libraries, and Tools. Available:
              https://insights.stackoverflow.com/survey/2019#technology-
              _-most-loved-dreaded-and-wanted-other-frameworks-
              libraries-and-tools
    [21]      T. V. Varuna and A. Mohan, "Trend Prediction of GitHub using
              Time Series Analysis," IEEE, 2019.
    [22]      GitHub. (2020, 19.10.2020). Topics on GitHub. Available:
              https://github.com/topics/




                                                                            - 281 -


View publication stats
